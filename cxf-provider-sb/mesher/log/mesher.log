2018-03-30 10:28:12.834 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 10:28:12.834 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 10:28:12.834 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 10:28:12.836 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 10:28:12.836 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 10:28:12.836 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 10:28:12.837 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 10:28:12.837 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 10:28:12.837 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 10:28:12.838 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 10:28:12.842 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 10:28:12.843 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 10:28:12.844 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 10:28:12.844 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 10:28:12.845 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 10:28:12.845 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 10:28:12.845 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 10:28:12.845 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 10:28:12.846 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 10:28:12.846 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 10:28:13.160 +08:00 WARN servicecenter/servicecenter.go:34 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] not exists in registry, register it
2018-03-30 10:28:13.235 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 10:28:13.297 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 10:28:13.597 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 10:28:13.597 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 10:28:13.600 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 10:28:13.600 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 10:28:13.819 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 10:28:13.820 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 10:28:13.822 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 10:28:13.825 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 10:28:13.826 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 10:28:13.827 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:28:13.827 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:28:13.829 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:28:13.837 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:28:13.840 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:28:13.842 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:28:13.851 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 10:28:13.851 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:28:13.851 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:28:13.852 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 10:28:13.853 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 10:28:13.853 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 10:28:14.855 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 10:28:14.855 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 10:28:14.867 +08:00 ERROR server/server_manager.go:65 servers failed to start error: listen tcp4 192.168.56.101:30101: bind: The requested address is not valid in its context.
2018-03-30 10:28:14.871 +08:00 ERROR go-chassis/chassis.go:204 run chassis fail: error: Can not start [http] server,listen tcp4 192.168.56.101:30101: bind: The requested address is not valid in its context.
2018-03-30 10:28:14.875 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 10:28:15.050 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: ff0df5e733c111e891230255ac105117/001c5eb833c211e891230255ac105117
2018-03-30 10:28:15.050 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: ff0df5e733c111e891230255ac105117/001c5eb833c211e891230255ac105117
2018-03-30 10:28:15.054 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: ff0df5e733c111e891230255ac105117
2018-03-30 10:28:15.055 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:ff0df5e733c111e891230255ac105117/001c5eb833c211e891230255ac105117
2018-03-30 10:28:15.056 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: ff0df5e733c111e891230255ac105117/001c5eb833c211e891230255ac105117.
2018-03-30 10:28:15.057 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: ff0df5e733c111e891230255ac105117/001c5eb833c211e891230255ac105117.
2018-03-30 10:28:16.035 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 10:47:17.219 +08:00 INFO archaius/archaius.go:77 config value after change cse.protocols.http.listenAddress | 10.1.3.80:30101
2018-03-30 10:47:17.220 +08:00 INFO config-center/config_center.go:225 config value cse.protocols.http.listenAddress | 10.1.3.80:30101
2018-03-30 10:47:51.780 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 10:47:51.781 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 10:47:51.781 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 10:47:51.782 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 10:47:51.782 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 10:47:51.783 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 10:47:51.783 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 10:47:51.783 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 10:47:51.784 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 10:47:51.784 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 10:47:51.785 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 10:47:51.786 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 10:47:51.787 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 10:47:51.789 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 10:47:51.790 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 10:47:51.790 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 10:47:51.790 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 10:47:51.791 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 10:47:51.791 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 10:47:51.792 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 10:47:52.055 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 10:47:52.056 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 10:47:52.120 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 10:47:52.373 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 10:47:52.373 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 10:47:52.378 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 10:47:52.379 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 10:47:52.592 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 10:47:52.593 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 10:47:52.595 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 10:47:52.596 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 10:47:52.597 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 10:47:52.599 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:47:52.599 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:47:52.602 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:47:52.602 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:47:52.604 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:47:52.604 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:47:52.605 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:47:52.605 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:47:52.605 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 10:47:52.618 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 10:47:52.620 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 10:47:52.628 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 10:47:53.620 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 10:47:53.621 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 10:47:53.624 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 10:47:53.628 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 10:47:53.629 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 10:47:53.781 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: ff0df5e733c111e891230255ac105117/beb545bd33c411e89c8f0255ac105519
2018-03-30 10:47:53.781 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: ff0df5e733c111e891230255ac105117/beb545bd33c411e89c8f0255ac105519
2018-03-30 10:47:53.782 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: ff0df5e733c111e891230255ac105117
2018-03-30 10:47:53.782 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:ff0df5e733c111e891230255ac105117/beb545bd33c411e89c8f0255ac105519
2018-03-30 10:47:53.783 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: ff0df5e733c111e891230255ac105117/beb545bd33c411e89c8f0255ac105519.
2018-03-30 10:47:53.783 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: ff0df5e733c111e891230255ac105117/beb545bd33c411e89c8f0255ac105519.
2018-03-30 10:47:54.798 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 10:48:31.717 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 10:48:31.717 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 10:48:31.717 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 10:48:31.718 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 10:48:31.718 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 10:48:31.719 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 10:48:31.719 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 10:48:31.719 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 10:48:31.720 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 10:48:31.720 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 10:48:31.721 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 10:48:31.722 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 10:48:31.723 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 10:48:31.725 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 10:48:31.726 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 10:48:31.726 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 10:48:31.727 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 10:48:31.727 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 10:48:31.727 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 10:48:31.727 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 10:48:31.946 +08:00 WARN servicecenter/servicecenter.go:34 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] not exists in registry, register it
2018-03-30 10:48:32.022 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 10:48:32.101 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 10:48:32.383 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 10:48:32.383 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 10:48:32.385 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 10:48:32.386 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 10:48:32.618 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 10:48:32.619 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 10:48:32.621 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 10:48:32.623 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 10:48:32.625 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 10:48:32.627 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:48:32.627 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:48:32.630 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:48:32.631 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:48:32.639 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:48:32.639 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:48:32.640 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:48:32.640 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 10:48:32.641 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 10:48:32.644 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 10:48:32.650 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 10:48:32.651 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 10:48:33.651 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 10:48:33.652 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 10:48:33.655 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 10:48:33.656 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 10:48:33.657 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 10:48:33.815 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: d58256f733c411e891230255ac105117/d6933ec333c411e891230255ac105117
2018-03-30 10:48:33.815 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: d58256f733c411e891230255ac105117/d6933ec333c411e891230255ac105117
2018-03-30 10:48:33.816 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 10:48:33.817 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/d6933ec333c411e891230255ac105117
2018-03-30 10:48:33.818 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/d6933ec333c411e891230255ac105117.
2018-03-30 10:48:33.818 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: d58256f733c411e891230255ac105117/d6933ec333c411e891230255ac105117.
2018-03-30 10:48:34.822 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 11:08:54.531 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 11:08:54.531 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 11:08:54.532 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 11:08:54.533 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 11:08:54.533 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 11:08:54.533 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 11:08:54.534 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 11:08:54.534 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 11:08:54.534 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 11:08:54.534 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 11:08:54.535 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 11:08:54.536 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 11:08:54.538 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 11:08:54.539 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 11:08:54.539 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:08:54.540 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 11:08:54.540 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 11:08:54.541 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 11:08:54.541 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 11:08:54.773 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 11:08:54.774 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 11:08:54.935 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 11:08:55.213 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 11:08:55.214 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 11:08:55.216 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 11:08:55.217 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:08:55.449 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 11:08:55.449 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 11:08:55.451 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 11:08:55.452 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 11:08:55.454 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 11:08:55.455 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:08:55.455 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:08:55.457 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:08:55.458 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:08:55.462 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:08:55.462 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:08:55.463 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:08:55.464 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:08:55.464 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 11:08:55.475 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 11:08:55.475 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 11:08:55.476 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 11:08:56.476 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 11:08:56.476 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 11:08:56.482 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 11:08:56.482 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 11:08:56.483 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 11:08:56.644 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:08:56.644 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:08:56.647 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 11:08:56.651 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:08:56.652 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117.
2018-03-30 11:08:56.653 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117.
2018-03-30 11:08:57.648 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 11:12:25.975 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 11:12:25.976 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 11:12:25.976 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 11:12:25.977 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 11:12:25.977 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 11:12:25.978 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 11:12:25.978 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 11:12:25.978 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 11:12:25.979 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 11:12:25.979 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 11:12:25.979 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 11:12:25.981 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 11:12:25.984 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 11:12:25.984 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 11:12:25.985 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:12:25.985 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 11:12:25.985 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 11:12:25.985 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 11:12:25.986 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 11:12:26.244 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 11:12:26.244 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 11:12:26.409 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 11:12:26.750 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 11:12:26.751 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 11:12:26.754 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 11:12:26.755 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:12:26.979 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 11:12:26.979 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 11:12:26.985 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 11:12:26.986 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 11:12:26.987 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 11:12:26.988 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:12:26.988 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:12:26.997 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:12:26.997 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:12:26.998 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:12:26.998 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:12:26.999 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:12:26.999 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:12:27.000 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 11:12:27.005 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 11:12:27.011 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 11:12:27.014 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 11:12:28.013 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 11:12:28.013 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 11:12:28.016 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 11:12:28.016 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 11:12:28.017 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 11:12:28.170 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:12:28.171 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:12:28.176 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 11:12:28.177 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:12:28.177 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117.
2018-03-30 11:12:28.181 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117.
2018-03-30 11:12:29.267 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 11:14:27.328 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:14:27.399 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:14:28.987 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-03-30 11:14:31.234 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 11:18:42.941 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 11:18:42.942 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 11:18:42.942 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 11:18:42.943 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 11:18:42.943 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 11:18:42.944 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 11:18:42.944 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 11:18:42.944 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 11:18:42.945 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 11:18:42.945 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 11:18:42.945 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 11:18:42.946 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 11:18:42.949 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 11:18:42.950 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 11:18:42.951 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:18:42.951 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 11:18:42.951 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 11:18:42.951 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 11:18:42.952 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 11:18:43.173 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 11:18:43.173 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 11:18:43.321 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 11:18:43.561 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 11:18:43.561 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 11:18:43.562 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 11:18:43.563 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:18:43.839 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 11:18:43.839 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 11:18:43.840 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 11:18:43.840 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 11:18:43.840 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 11:18:43.841 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:18:43.841 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:18:43.842 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:18:43.842 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:18:43.842 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:18:43.842 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:18:43.842 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:18:43.842 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 11:18:43.842 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:18:43.844 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 11:18:43.844 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 11:18:43.844 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 11:18:44.844 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 11:18:44.844 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 11:18:44.848 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 11:18:44.848 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 11:18:44.849 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 11:18:44.968 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:18:44.968 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:18:44.971 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 11:18:44.973 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:18:44.974 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117.
2018-03-30 11:18:44.975 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117.
2018-03-30 11:18:46.043 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 11:19:19.228 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:19:19.287 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:19:19.840 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-03-30 11:19:24.048 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 11:19:28.107 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:19:28.202 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:19:34.907 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:19:34.973 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:25:25.298 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:25:25.363 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:27:39.783 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 11:27:39.783 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 11:27:39.783 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 11:27:39.784 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 11:27:39.784 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 11:27:39.785 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 11:27:39.785 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 11:27:39.785 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 11:27:39.786 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 11:27:39.786 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 11:27:39.787 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 11:27:39.788 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 11:27:39.789 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 11:27:39.789 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 11:27:39.789 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:27:39.789 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 11:27:39.791 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 11:27:39.793 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 11:27:39.793 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 11:27:39.794 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 11:27:40.100 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 11:27:40.100 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 11:27:40.200 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 11:27:40.488 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 11:27:40.488 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 11:27:40.490 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 11:27:40.496 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:27:40.739 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 11:27:40.739 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 11:27:40.741 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 11:27:40.741 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 11:27:40.741 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 11:27:40.742 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:40.742 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:40.745 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:40.745 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:40.746 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:40.746 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:40.747 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 11:27:40.747 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:40.748 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:40.749 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 11:27:40.755 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 11:27:40.756 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 11:27:41.919 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 11:27:41.919 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 11:27:41.920 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 11:27:41.920 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 11:27:41.921 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 11:27:41.921 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 11:27:41.921 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 11:27:41.921 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 11:27:41.921 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 11:27:41.922 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 11:27:41.922 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 11:27:41.923 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 11:27:41.924 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 11:27:41.924 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 11:27:41.925 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:27:41.925 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 11:27:41.925 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 11:27:41.925 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 11:27:41.928 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 11:27:41.928 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 11:27:42.183 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 11:27:42.183 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 11:27:42.294 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 11:27:42.542 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 11:27:42.543 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 11:27:42.544 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 11:27:42.545 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 11:27:42.545 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 11:27:42.546 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:27:42.804 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 11:27:42.805 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 11:27:42.808 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 11:27:42.811 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:42.811 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:42.813 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:42.813 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:42.815 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:42.815 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:42.816 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:42.816 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 11:27:42.816 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:27:42.826 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 11:27:42.827 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 11:27:42.828 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 11:27:43.828 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 11:27:43.828 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 11:27:43.830 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 11:27:43.830 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 11:27:43.830 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 11:27:43.956 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:27:43.956 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:27:43.958 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 11:27:43.959 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:27:43.960 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117.
2018-03-30 11:27:43.961 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117.
2018-03-30 11:27:44.776 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 11:28:12.437 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 11:28:12.438 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 11:28:12.438 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 11:28:12.439 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 11:28:12.439 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 11:28:12.439 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 11:28:12.439 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 11:28:12.440 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 11:28:12.440 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 11:28:12.440 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 11:28:12.441 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 11:28:12.442 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 11:28:12.443 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 11:28:12.443 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 11:28:12.443 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:28:12.444 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 11:28:12.447 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 11:28:12.447 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 11:28:12.447 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 11:28:12.447 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 11:28:12.660 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 11:28:12.660 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 11:28:12.750 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 11:28:13.048 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 11:28:13.049 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 11:28:13.051 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 11:28:13.052 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 11:28:13.254 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 11:28:13.254 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 11:28:13.261 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 11:28:13.262 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 11:28:13.263 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 11:28:13.264 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:28:13.264 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:28:13.268 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:28:13.269 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:28:13.271 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:28:13.271 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:28:13.272 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:28:13.272 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 11:28:13.272 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 11:28:13.276 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 11:28:13.283 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 11:28:13.287 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 11:28:14.285 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 11:28:14.285 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 11:28:14.292 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 11:28:14.293 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 11:28:14.294 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 11:28:14.434 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:28:14.435 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:28:14.438 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 11:28:14.438 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117
2018-03-30 11:28:14.439 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117.
2018-03-30 11:28:14.440 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117.
2018-03-30 11:28:15.462 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 11:30:10.647 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:30101:0.0.1:default
2018-03-30 11:30:10.733 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:30101/0.0.1"}

2018-03-30 11:30:11.261 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-03-30 11:30:12.423 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:30101:0.0.1:default
2018-03-30 11:30:12.502 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:30101/0.0.1"}

2018-03-30 11:30:13.487 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 11:37:02.910 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:02.978 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:03.262 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-03-30 11:37:09.485 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 11:37:16.561 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:16.627 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:16.630 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:16.707 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:16.710 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:16.782 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:16.787 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:16.849 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:16.855 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:16.917 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:16.919 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:17.052 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:17.056 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:17.171 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:17.178 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:17.269 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:17.274 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:17.348 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:17.349 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:17.412 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:17.415 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:17.483 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:17.485 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:17.563 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:37:17.572 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:37:17.642 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:04.675 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:04.748 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:04.763 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:04.920 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:04.923 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.009 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:05.017 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.092 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:05.095 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.159 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:05.159 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.227 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:05.231 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.341 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:05.345 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.410 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:05.413 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.492 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:05.494 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.573 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:05.576 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.654 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:05.656 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.722 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:38:05.731 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 11:38:05.797 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 11:39:39.082 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 127.0.0.1:8080:0.0.1:default
2018-03-30 11:39:39.154 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 127.0.0.1:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/127.0.0.1:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/127.0.0.1:8080/0.0.1"}

2018-03-30 11:39:39.261 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-03-30 11:39:43.458 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 11:40:13.462 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 127.0.0.1:8080:0.0.1:default
2018-03-30 11:40:13.533 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 127.0.0.1:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/127.0.0.1:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/127.0.0.1:8080/0.0.1"}

2018-03-30 11:40:44.600 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 127.0.0.1:8080:0.0.1:default
2018-03-30 11:40:44.678 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 127.0.0.1:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/127.0.0.1:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/127.0.0.1:8080/0.0.1"}

2018-03-30 11:42:33.167 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:42:33.254 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:42:33.262 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-03-30 11:42:39.478 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 11:45:10.704 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:45:10.783 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:49:12.521 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:49:12.590 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:49:16.368 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:49:16.443 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:38.722 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:38.791 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:38.797 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:38.868 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:38.873 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:38.945 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:38.949 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:39.018 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:39.023 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:39.118 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:39.120 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:39.207 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:39.210 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:39.285 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:39.288 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:39.361 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:39.364 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:39.453 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:39.455 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:39.530 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:39.534 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:39.613 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:39.615 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:39.693 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:39.702 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:39.782 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:46.987 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:47.059 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:47.061 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:47.135 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:47.136 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:47.214 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:47.215 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:47.288 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:47.290 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:47.368 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:47.370 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:47.447 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:47.451 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:51:47.648 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:51:47.652 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:51:47.655 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:51:47.657 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:51:47.660 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:51:47.662 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:51:47.667 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.465 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 11:54:34.534 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 11:54:34.543 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.545 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.548 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.551 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.552 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.554 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.556 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.558 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.559 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.561 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.561 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 11:54:34.567 +08:00 ERROR handler/bizkeeper_consumer_handle.go:85 fallback: Consumer.10.1.3.80:8080 error: circuit open
2018-03-30 12:32:27.519 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: Post https://cse.cn-north-1.myhwclouds.com:443/v2/default/csemonitor/metric?service=cxf-provider-sbdemo: dial tcp 43.254.0.22:443: connectex: An established connection was aborted by the software in your host machine.
2018-03-30 12:38:14.636 +08:00 WARN configcenter-source/configcentersource.go:338 Failed to pull configurations from config center server error: Unable to connect to ServiceCenter.error: Get https://cse.cn-north-1.myhwclouds.com:443/v3/default/configuration/items?dimensionsInfo=cxf-provider-sbdemo@cxf-mesh%230.0.1: dial tcp: lookup cse.cn-north-1.myhwclouds.com: no such host
2018-03-30 12:38:14.636 +08:00 ERROR servicecenter/cache.go:179 get Providers failed, sid = d58256f733c411e891230255ac105117 error: Get Providers failed, error: Unable to connect to ServiceCenter.error: Get https://cse.cn-north-1.myhwclouds.com:443/v4/default/registry/microservices/d58256f733c411e891230255ac105117/providers: dial tcp: lookup cse.cn-north-1.myhwclouds.com: no such host, MicroServiceid: d58256f733c411e891230255ac105117
2018-03-30 12:38:14.636 +08:00 ERROR servicecenter/servicecenter.go:136 Heartbeat failed, microServiceID/instanceID: d58256f733c411e891230255ac105117/af7208a333c711e891230255ac105117. error: Unable to connect to ServiceCenter.error: Put https://cse.cn-north-1.myhwclouds.com:443/v4/default/registry/microservices/d58256f733c411e891230255ac105117/instances/af7208a333c711e891230255ac105117/heartbeat: dial tcp: lookup cse.cn-north-1.myhwclouds.com: no such host
2018-03-30 12:38:14.636 +08:00 ERROR servicecenter/cache.go:73 AutoUpdateMicroserviceInstance failed. error: Get Providers failed, error: Unable to connect to ServiceCenter.error: Get https://cse.cn-north-1.myhwclouds.com:443/v4/default/registry/microservices/d58256f733c411e891230255ac105117/providers: dial tcp: lookup cse.cn-north-1.myhwclouds.com: no such host, MicroServiceid: d58256f733c411e891230255ac105117
2018-03-30 12:38:14.645 +08:00 ERROR servicecenter/cache.go:97 Get instances failed error: Unable to connect to ServiceCenter.error: Get https://cse.cn-north-1.myhwclouds.com:443/v4/default/govern/microservices?options=instances: dial tcp: lookup cse.cn-north-1.myhwclouds.com: no such host
2018-03-30 12:38:14.645 +08:00 ERROR registry/heartbeat.go:95 Run Heartbeat fail error: Unable to connect to ServiceCenter.error: Put https://cse.cn-north-1.myhwclouds.com:443/v4/default/registry/microservices/d58256f733c411e891230255ac105117/instances/af7208a333c711e891230255ac105117/heartbeat: dial tcp: lookup cse.cn-north-1.myhwclouds.com: no such host
2018-03-30 12:38:14.646 +08:00 ERROR servicecenter/cache.go:86 Auto Update IP index failed. error: Unable to connect to ServiceCenter.error: Get https://cse.cn-north-1.myhwclouds.com:443/v4/default/govern/microservices?options=instances: dial tcp: lookup cse.cn-north-1.myhwclouds.com: no such host
2018-03-30 12:38:21.461 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 12:38:24.647 +08:00 INFO registry/heartbeat.go:125 Try to re-register self
2018-03-30 12:38:24.988 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 12:38:24.989 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/2eeb112733d411e891230255ac105117
2018-03-30 12:38:24.989 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/2eeb112733d411e891230255ac105117.
2018-03-30 12:38:24.989 +08:00 WARN registry/heartbeat.go:185 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: /2eeb112733d411e891230255ac105117
2018-03-30 12:38:24.989 +08:00 WARN registry/heartbeat.go:189 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: /2eeb112733d411e891230255ac105117
2018-03-30 12:38:24.989 +08:00 WARN registry/heartbeat.go:201 RegisterMicroServiceInstance success, microServiceID/instanceID: /2eeb112733d411e891230255ac105117.
2018-03-30 12:38:24.989 +08:00 WARN registry/heartbeat.go:139 Re-register self success
2018-03-30 12:41:33.973 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 12:41:33.973 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 12:41:33.974 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 12:41:33.975 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 12:41:33.977 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 12:41:33.977 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 12:41:33.977 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 12:41:33.978 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 12:41:33.978 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 12:41:33.978 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 12:41:33.979 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 12:41:33.979 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 12:41:33.981 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 12:41:33.983 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 12:41:33.983 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 12:41:33.983 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 12:41:33.984 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 12:41:33.984 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 12:41:33.984 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 12:41:33.984 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 12:41:34.392 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 12:41:34.392 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 12:41:34.500 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 12:41:34.895 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 12:41:34.896 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 12:41:34.903 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 12:41:34.903 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 12:41:35.200 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 12:41:35.200 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 12:41:35.201 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 12:41:35.201 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 12:41:35.202 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 12:41:35.203 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 12:41:35.203 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 12:41:35.204 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 12:41:35.204 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 12:41:35.205 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 12:41:35.205 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 12:41:35.205 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 12:41:35.205 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 12:41:35.205 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 12:41:35.207 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 12:41:35.207 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 12:41:35.207 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 12:41:36.207 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 12:41:36.207 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 12:41:36.211 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 12:41:36.211 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 12:41:36.212 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 12:41:36.433 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: d58256f733c411e891230255ac105117/a104eba933d411e891230255ac105117
2018-03-30 12:41:36.434 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: d58256f733c411e891230255ac105117/a104eba933d411e891230255ac105117
2018-03-30 12:41:36.436 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 12:41:36.437 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/a104eba933d411e891230255ac105117
2018-03-30 12:41:36.438 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/a104eba933d411e891230255ac105117.
2018-03-30 12:41:36.439 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: d58256f733c411e891230255ac105117/a104eba933d411e891230255ac105117.
2018-03-30 12:41:37.558 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 12:42:18.643 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:18.758 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:18.769 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:18.892 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:18.895 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:19.007 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:19.012 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:19.124 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:19.129 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:19.222 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:19.224 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:19.322 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:19.326 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:19.437 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:19.439 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:19.545 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:19.546 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:19.672 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:19.674 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:19.793 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:19.797 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:19.922 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:19.923 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:20.032 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:42:20.040 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:42:20.182 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:40.166 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:40.286 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:40.301 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:40.448 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:40.453 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:40.581 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:40.586 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:40.685 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:40.691 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:40.788 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:40.790 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:40.893 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:40.897 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:41.062 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:41.066 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:41.199 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:41.203 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:41.322 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:41.326 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:41.439 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:41.443 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:41.536 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:41.543 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:41.671 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:48:41.681 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: 10.1.3.80:8080:0.0.1:default
2018-03-30 12:48:41.808 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 10.1.3.80:8080:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/10.1.3.80:8080/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/10.1.3.80:8080/0.0.1"}

2018-03-30 12:56:31.495 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-30 12:56:31.495 +08:00 INFO client/client_manager.go:97 Create client for cxf-provider-sbdemo
2018-03-30 12:56:33.201 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-03-30 12:56:35.569 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 12:57:14.825 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:14.926 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:14.936 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:15.047 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:15.051 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:15.163 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:15.172 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:15.280 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:15.283 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:15.380 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:15.383 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:15.510 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:15.514 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:15.615 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:15.619 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:15.722 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:15.726 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:16.260 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:16.264 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:16.365 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:16.371 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:16.471 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:16.473 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:16.564 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 12:57:16.573 +08:00 WARN servicecenter/servicecenter.go:431 d58256f733c411e891230255ac105117 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-03-30 12:57:16.681 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer d58256f733c411e891230255ac105117 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-03-30 13:28:24.400 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: Post https://cse.cn-north-1.myhwclouds.com:443/v2/default/csemonitor/metric?service=cxf-provider-sbdemo: read tcp 192.168.43.136:52491->43.254.0.22:443: wsarecv: An established connection was aborted by the software in your host machine.
2018-03-30 13:28:25.404 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 13:34:36.280 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 13:34:36.280 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 13:34:36.281 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 13:34:36.282 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 13:34:36.282 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 13:34:36.282 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 13:34:36.283 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 13:34:36.283 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 13:34:36.284 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 13:34:36.284 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 13:34:36.284 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 13:34:36.285 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 13:34:36.287 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 13:34:36.288 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 13:34:36.289 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 13:34:36.289 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 13:34:36.289 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 13:34:36.290 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 13:34:36.290 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 13:34:36.290 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 13:34:36.499 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 13:34:36.499 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 13:34:36.592 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 13:34:36.817 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 13:34:36.817 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 13:34:36.819 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 13:34:36.823 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 13:34:37.029 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 13:34:37.030 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 13:34:37.032 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 13:34:37.033 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 13:34:37.034 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 13:34:37.035 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:37.036 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:37.037 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:37.037 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:37.040 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:37.040 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:37.042 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:37.042 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:37.042 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 13:34:37.053 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 13:34:37.053 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 13:34:37.054 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 13:34:38.380 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 13:34:38.380 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 13:34:38.381 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 13:34:38.382 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 13:34:38.382 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 13:34:38.382 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 13:34:38.382 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 13:34:38.383 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 13:34:38.383 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 13:34:38.383 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 13:34:38.386 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 13:34:38.387 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 13:34:38.388 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 13:34:38.389 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 13:34:38.389 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 13:34:38.389 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 13:34:38.389 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 13:34:38.390 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 13:34:38.390 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 13:34:38.390 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 13:34:38.614 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 13:34:38.614 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 13:34:38.730 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 13:34:38.971 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 13:34:38.971 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 13:34:38.974 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 13:34:38.978 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 13:34:39.175 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 13:34:39.175 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 13:34:39.177 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 13:34:39.180 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 13:34:39.181 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 13:34:39.181 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:39.182 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:39.183 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:39.183 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:39.184 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:39.184 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:39.185 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:39.185 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 13:34:39.185 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 13:34:39.193 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 13:34:39.194 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 13:34:39.195 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 13:34:40.195 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 13:34:40.196 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 13:34:40.204 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 13:34:40.204 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 13:34:40.205 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 13:34:40.380 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: d58256f733c411e891230255ac105117/0ad06b8033dc11e89c8f0255ac105519
2018-03-30 13:34:40.380 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: d58256f733c411e891230255ac105117/0ad06b8033dc11e89c8f0255ac105519
2018-03-30 13:34:40.386 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 13:34:40.387 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/0ad06b8033dc11e89c8f0255ac105519
2018-03-30 13:34:40.387 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/0ad06b8033dc11e89c8f0255ac105519.
2018-03-30 13:34:40.388 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: d58256f733c411e891230255ac105117/0ad06b8033dc11e89c8f0255ac105519.
2018-03-30 13:34:41.408 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 13:37:16.923 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-30 13:37:16.924 +08:00 INFO client/client_manager.go:97 Create client for cxf-provider-sbdemo
2018-03-30 13:37:17.178 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-03-30 13:37:19.376 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 14:13:07.276 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 14:13:07.277 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 14:13:07.277 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 14:13:07.278 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 14:13:07.278 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 14:13:07.278 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 14:13:07.278 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 14:13:07.279 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 14:13:07.279 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 14:13:07.279 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 14:13:07.280 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 14:13:07.280 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 14:13:07.282 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 14:13:07.282 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 14:13:07.282 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 14:13:07.285 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 14:13:07.285 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 14:13:07.286 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 14:13:07.286 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 14:13:07.286 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 14:13:07.563 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 14:13:07.564 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 14:13:07.657 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 14:13:07.960 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 14:13:07.961 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 14:13:07.964 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 14:13:07.966 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 14:13:08.164 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 14:13:08.165 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 14:13:08.167 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 14:13:08.170 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 14:13:08.171 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 14:13:08.172 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:13:08.172 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:13:08.174 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:13:08.174 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:13:08.184 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:13:08.185 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:13:08.186 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:13:08.186 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 14:13:08.186 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:13:08.189 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 14:13:08.196 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 14:13:08.197 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 14:13:09.197 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 14:13:09.197 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 14:13:09.199 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 14:13:09.199 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 14:13:09.200 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 14:13:09.375 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: d58256f733c411e891230255ac105117/6b16f28c33e111e89c8f0255ac105519
2018-03-30 14:13:09.375 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: d58256f733c411e891230255ac105117/6b16f28c33e111e89c8f0255ac105519
2018-03-30 14:13:09.376 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 14:13:09.377 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/6b16f28c33e111e89c8f0255ac105519
2018-03-30 14:13:09.377 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/6b16f28c33e111e89c8f0255ac105519.
2018-03-30 14:13:09.377 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: d58256f733c411e891230255ac105117/6b16f28c33e111e89c8f0255ac105519.
2018-03-30 14:13:10.398 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 14:16:43.507 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-30 14:16:43.507 +08:00 INFO client/client_manager.go:97 Create client for cxf-provider-sbdemo
2018-03-30 14:16:44.169 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-03-30 14:16:46.426 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 14:30:28.491 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 14:30:28.492 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 14:30:28.493 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 14:30:28.495 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 14:30:28.495 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 14:30:28.495 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 14:30:28.495 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 14:30:28.495 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 14:30:28.496 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 14:30:28.496 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 14:30:28.497 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 14:30:28.500 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 14:30:28.502 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 14:30:28.502 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 14:30:28.503 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 14:30:28.503 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 14:30:28.503 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 14:30:28.503 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 14:30:28.504 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 14:30:28.751 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-03-30 14:30:28.751 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 14:30:28.934 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 14:30:29.265 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 14:30:29.265 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 14:30:29.268 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 14:30:29.269 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 14:30:29.270 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 14:30:29.271 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 14:30:29.499 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 14:30:29.499 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 14:30:29.501 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 14:30:29.502 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:30:29.502 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:30:29.503 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:30:29.503 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:30:29.505 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:30:29.505 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:30:29.506 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:30:29.506 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 14:30:29.506 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 14:30:29.510 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 14:30:29.510 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 14:30:29.510 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 14:30:30.511 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 14:30:30.511 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 14:30:30.511 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 14:30:30.511 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 14:30:30.511 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 14:30:30.671 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: d58256f733c411e891230255ac105117/d7c1e04c33e311e891230255ac105117
2018-03-30 14:30:30.671 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: d58256f733c411e891230255ac105117/d7c1e04c33e311e891230255ac105117
2018-03-30 14:30:30.672 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: d58256f733c411e891230255ac105117
2018-03-30 14:30:30.672 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:d58256f733c411e891230255ac105117/d7c1e04c33e311e891230255ac105117
2018-03-30 14:30:30.672 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: d58256f733c411e891230255ac105117/d7c1e04c33e311e891230255ac105117.
2018-03-30 14:30:30.672 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: d58256f733c411e891230255ac105117/d7c1e04c33e311e891230255ac105117.
2018-03-30 14:30:31.496 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 16:59:59.338 +08:00 ERROR servicecenter/cache.go:179 get Providers failed, sid = d58256f733c411e891230255ac105117 error: Get Providers failed, MicroServiceid: d58256f733c411e891230255ac105117, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"Consumer does not exist"}

2018-03-30 16:59:59.338 +08:00 ERROR servicecenter/cache.go:73 AutoUpdateMicroserviceInstance failed. error: Get Providers failed, MicroServiceid: d58256f733c411e891230255ac105117, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"Consumer does not exist"}

2018-03-30 17:00:14.195 +08:00 ERROR servicecenter/servicecenter.go:136 Heartbeat failed, microServiceID/instanceID: d58256f733c411e891230255ac105117/d7c1e04c33e311e891230255ac105117. error: Common exception(result: 400 {"errorCode":"400017","errorMessage":"Instance does not exist","detail":"Service instance does not exist."}
)
2018-03-30 17:00:14.195 +08:00 ERROR registry/heartbeat.go:95 Run Heartbeat fail error: Common exception(result: 400 {"errorCode":"400017","errorMessage":"Instance does not exist","detail":"Service instance does not exist."}
)
2018-03-30 17:00:24.196 +08:00 INFO registry/heartbeat.go:125 Try to re-register self
2018-03-30 17:00:24.332 +08:00 ERROR servicecenter/servicecenter.go:227 GetMicroService failed error: GetMicroService failed, MicroServiceId: d58256f733c411e891230255ac105117, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"service does not exist."}

, microserviceURL: https://cse.cn-north-1.myhwclouds.com:443/v4/default/registry/microservices/d58256f733c411e891230255ac105117
2018-03-30 17:00:24.333 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 17:00:24.333 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 17:00:24.410 +08:00 WARN servicecenter/servicecenter.go:34 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] not exists in registry, register it
2018-03-30 17:00:24.494 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 17:00:24.794 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 17:00:24.794 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 17:00:24.950 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: c8873bb333f811e891230255ac105117/c8cd4b2c33f811e89c8f0255ac105519
2018-03-30 17:00:24.950 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: c8873bb333f811e891230255ac105117/c8cd4b2c33f811e89c8f0255ac105519
2018-03-30 17:00:24.951 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: c8873bb333f811e891230255ac105117
2018-03-30 17:00:24.951 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:c8873bb333f811e891230255ac105117/c8cd4b2c33f811e89c8f0255ac105519
2018-03-30 17:00:24.951 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: c8873bb333f811e891230255ac105117/c8cd4b2c33f811e89c8f0255ac105519.
2018-03-30 17:00:24.951 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: c8873bb333f811e891230255ac105117/c8cd4b2c33f811e89c8f0255ac105519.
2018-03-30 17:00:24.952 +08:00 WARN registry/heartbeat.go:139 Re-register self success
2018-03-30 17:14:33.859 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-03-30 17:14:33.859 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 17:14:33.860 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 17:14:33.861 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-03-30 17:14:33.861 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-03-30 17:14:33.861 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-03-30 17:14:33.861 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-03-30 17:14:33.862 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-03-30 17:14:33.862 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-03-30 17:14:33.862 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 17:14:33.863 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-03-30 17:14:33.864 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
routeRule:
  cxf-base-sbdemo: #这里就是请求里的host,也是sc里的service name
    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
      route: #路由规则列表
      - tags:
          version: 0.0.1 #对接service center的话，如果不填就自动为0.1
          app: cxf-mesh #对接service center的话，如果不填就自动为default
2018-03-30 17:14:33.866 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 17:14:33.867 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 17:14:33.869 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 17:14:33.869 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 17:14:33.869 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 17:14:33.870 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-03-30 17:14:33.870 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 17:14:33.870 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 17:14:34.127 +08:00 WARN servicecenter/servicecenter.go:34 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] not exists in registry, register it
2018-03-30 17:14:34.209 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-03-30 17:14:34.298 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 17:14:34.562 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 17:14:34.562 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 17:14:34.563 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 17:14:34.564 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 17:14:34.794 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 17:14:34.795 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 17:14:34.796 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 17:14:34.798 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 17:14:34.799 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 17:14:34.800 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 17:14:34.801 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 17:14:34.802 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 17:14:34.802 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 17:14:34.803 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 17:14:34.803 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 17:14:34.804 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 17:14:34.804 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 17:14:34.805 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 17:14:34.813 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 17:14:34.814 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 17:14:34.814 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 17:14:35.814 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 17:14:35.814 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 17:14:35.817 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 17:14:35.819 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 17:14:35.820 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 17:14:35.978 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: c30053aa33fa11e89c8f0255ac105519/c40e8ad033fa11e89c8f0255ac105519
2018-03-30 17:14:35.978 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: c30053aa33fa11e89c8f0255ac105519/c40e8ad033fa11e89c8f0255ac105519
2018-03-30 17:14:35.981 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: c30053aa33fa11e89c8f0255ac105519
2018-03-30 17:14:35.982 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:c30053aa33fa11e89c8f0255ac105519/c40e8ad033fa11e89c8f0255ac105519
2018-03-30 17:14:35.983 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: c30053aa33fa11e89c8f0255ac105519/c40e8ad033fa11e89c8f0255ac105519.
2018-03-30 17:14:35.984 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: c30053aa33fa11e89c8f0255ac105519/c40e8ad033fa11e89c8f0255ac105519.
2018-03-30 17:14:37.054 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 17:15:40.766 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-30 17:15:40.766 +08:00 INFO client/client_manager.go:97 Create client for cxf-provider-sbdemo
2018-03-30 17:15:41.951 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-03-30 17:18:09.358 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-03-30 17:18:15.782 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-03-30 17:20:08.440 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-03-30 17:22:47.759 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-03-30 17:23:54.075 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-03-30 17:23:57.472 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-03-30 17:24:02.218 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-03-30 17:25:29.996 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-03-30 17:28:37.148 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-03-30 17:29:49.338 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: Get error status code: 500 from http response: <soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"><soap:Body><soap:Fault><faultcode>soap:Server</faultcode><faultstring>404 Not Found</faultstring></soap:Fault></soap:Body></soap:Envelope>
2018-04-02 08:46:55.030 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-04-02 08:46:55.031 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-04-02 08:46:55.031 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-04-02 08:46:55.032 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-04-02 08:46:55.032 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-04-02 08:46:55.032 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-04-02 08:46:55.032 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-04-02 08:46:55.033 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-04-02 08:46:55.033 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-04-02 08:46:55.033 +08:00 INFO config/config.go:235 archaius init success
2018-04-02 08:46:55.034 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-04-02 08:46:55.034 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-04-02 08:46:55.036 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-04-02 08:46:55.036 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-04-02 08:46:55.036 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-04-02 08:46:55.037 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-04-02 08:46:55.045 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-04-02 08:46:55.046 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-04-02 08:46:55.046 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-04-02 08:46:55.046 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-04-02 08:46:55.911 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-04-02 08:46:55.912 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-04-02 08:46:56.098 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-04-02 08:49:38.283 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-04-02 08:49:38.284 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-04-02 08:49:38.284 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-04-02 08:49:38.285 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-04-02 08:49:38.285 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-04-02 08:49:38.286 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-04-02 08:49:38.286 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-04-02 08:49:38.286 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-04-02 08:49:38.287 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-04-02 08:49:38.287 +08:00 INFO config/config.go:235 archaius init success
2018-04-02 08:49:38.287 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-04-02 08:49:38.288 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-04-02 08:49:38.289 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-04-02 08:49:38.292 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-04-02 08:49:38.292 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-04-02 08:49:38.294 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-04-02 08:49:38.295 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-04-02 08:49:38.295 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-04-02 08:49:38.295 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-04-02 08:49:38.295 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-04-02 08:49:38.610 +08:00 WARN servicecenter/servicecenter.go:34 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] not exists in registry, register it
2018-04-02 08:49:38.701 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-04-02 08:49:38.773 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-04-02 08:49:39.101 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-04-02 08:49:39.101 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-04-02 08:49:39.106 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-04-02 08:49:39.107 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-04-02 08:49:39.341 +08:00 WARN config-center/config_center.go:78 config center init success
2018-04-02 08:49:39.342 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-04-02 08:49:39.344 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-04-02 08:49:39.345 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-04-02 08:49:39.347 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-04-02 08:49:39.348 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 08:49:39.348 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 08:49:39.351 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 08:49:39.352 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 08:49:39.371 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 08:49:39.371 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 08:49:39.372 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 08:49:39.372 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 08:49:39.372 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-04-02 08:49:39.375 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-04-02 08:49:39.375 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-04-02 08:49:39.383 +08:00 INFO adminapi/router.go:26 init router
2018-04-02 08:49:40.375 +08:00 INFO adminapi/router.go:82 admin server start success
2018-04-02 08:49:40.375 +08:00 INFO server/server_manager.go:62 starting server http...
2018-04-02 08:49:40.378 +08:00 INFO server/server_manager.go:68 http server start success
2018-04-02 08:49:40.378 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-04-02 08:49:40.379 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-04-02 08:49:40.704 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: b99b2a46360f11e89c8f0255ac105519/bacaad25360f11e891230255ac105117
2018-04-02 08:49:40.704 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: b99b2a46360f11e89c8f0255ac105519/bacaad25360f11e891230255ac105117
2018-04-02 08:49:40.706 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: b99b2a46360f11e89c8f0255ac105519
2018-04-02 08:49:40.707 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:b99b2a46360f11e89c8f0255ac105519/bacaad25360f11e891230255ac105117
2018-04-02 08:49:40.708 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: b99b2a46360f11e89c8f0255ac105519/bacaad25360f11e891230255ac105117.
2018-04-02 08:49:40.709 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: b99b2a46360f11e89c8f0255ac105519/bacaad25360f11e891230255ac105117.
2018-04-02 08:49:41.660 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-04-02 09:06:31.149 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-04-02 09:06:31.149 +08:00 INFO client/client_manager.go:97 Create client for cxf-provider-sbdemo
2018-04-02 10:00:30.777 +08:00 WARN servicecenter/servicecenter.go:431 b99b2a46360f11e89c8f0255ac105519 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-04-02 10:00:30.898 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer b99b2a46360f11e89c8f0255ac105519 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-04-02 10:00:31.354 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-04-02 10:00:33.950 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-04-02 10:00:34.023 +08:00 WARN servicecenter/servicecenter.go:431 b99b2a46360f11e89c8f0255ac105519 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-04-02 10:00:34.114 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer b99b2a46360f11e89c8f0255ac105519 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-04-02 10:01:30.253 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: Post https://cse.cn-north-1.myhwclouds.com:443/v2/default/csemonitor/metric?service=cxf-provider-sbdemo: read tcp 192.168.43.136:57362->43.254.0.22:443: wsarecv: An established connection was aborted by the software in your host machine.
2018-04-02 10:01:31.573 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-04-02 10:01:55.282 +08:00 WARN servicecenter/servicecenter.go:431 b99b2a46360f11e89c8f0255ac105519 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-04-02 10:01:55.349 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer b99b2a46360f11e89c8f0255ac105519 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-04-02 10:01:58.244 +08:00 WARN servicecenter/servicecenter.go:431 b99b2a46360f11e89c8f0255ac105519 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-04-02 10:01:58.316 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer b99b2a46360f11e89c8f0255ac105519 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-04-02 10:02:06.353 +08:00 WARN servicecenter/servicecenter.go:431 b99b2a46360f11e89c8f0255ac105519 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-04-02 10:02:06.424 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer b99b2a46360f11e89c8f0255ac105519 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-04-02 10:03:11.321 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-04-02 10:03:11.322 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-04-02 10:03:11.322 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-04-02 10:03:11.323 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-04-02 10:03:11.323 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-04-02 10:03:11.324 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-04-02 10:03:11.324 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-04-02 10:03:11.324 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-04-02 10:03:11.325 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-04-02 10:03:11.325 +08:00 INFO config/config.go:235 archaius init success
2018-04-02 10:03:11.325 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-04-02 10:03:11.326 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-04-02 10:03:11.328 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-04-02 10:03:11.329 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-04-02 10:03:11.330 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-04-02 10:03:11.330 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-04-02 10:03:11.331 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-04-02 10:03:11.331 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-04-02 10:03:11.331 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-04-02 10:03:11.332 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-04-02 10:03:11.600 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-04-02 10:03:11.600 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-04-02 10:03:11.675 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-04-02 10:03:11.971 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-04-02 10:03:11.971 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-04-02 10:03:11.974 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-04-02 10:03:11.975 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-04-02 10:03:12.191 +08:00 WARN config-center/config_center.go:78 config center init success
2018-04-02 10:03:12.191 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-04-02 10:03:12.197 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-04-02 10:03:12.198 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-04-02 10:03:12.198 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-04-02 10:03:12.199 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:03:12.199 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:03:12.201 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:03:12.201 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:03:12.203 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:03:12.203 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:03:12.205 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-04-02 10:03:12.205 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:03:12.205 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:03:12.206 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-04-02 10:03:12.207 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-04-02 10:03:12.207 +08:00 INFO adminapi/router.go:26 init router
2018-04-02 10:03:13.207 +08:00 INFO adminapi/router.go:82 admin server start success
2018-04-02 10:03:13.208 +08:00 INFO server/server_manager.go:62 starting server http...
2018-04-02 10:03:13.210 +08:00 WARN dynamichttp/http_server.go:121 In sidecar mode, if set to listen on 127.0.0.1, mesher can only proxy for consumer
2018-04-02 10:03:13.211 +08:00 INFO server/server_manager.go:68 http server start success
2018-04-02 10:03:13.212 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-04-02 10:03:13.213 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-04-02 10:03:13.347 +08:00 ERROR servicecenter/servicecenter.go:53 RegisterMicroServiceInstance failed. error: RegisterMicroServiceInstance failed, MicroServiceId: b99b2a46360f11e89c8f0255ac105519, response StatusCode: 400, response body: {"errorCode":"400025","errorMessage":"Endpoint is already belong to other service","detail":"Find the same endpoints in service c3de3e1c361111e89c8f0255ac105519"}

2018-04-02 10:03:13.347 +08:00 ERROR registry/bootstrap.go:144 Register instance failed, serviceID: b99b2a46360f11e89c8f0255ac105519. error: RegisterMicroServiceInstance failed, MicroServiceId: b99b2a46360f11e89c8f0255ac105519, response StatusCode: 400, response body: {"errorCode":"400025","errorMessage":"Endpoint is already belong to other service","detail":"Find the same endpoints in service c3de3e1c361111e89c8f0255ac105519"}

2018-04-02 10:03:13.348 +08:00 ERROR go-chassis/chassis.go:208 register instance fail: error: RegisterMicroServiceInstance failed, MicroServiceId: b99b2a46360f11e89c8f0255ac105519, response StatusCode: 400, response body: {"errorCode":"400025","errorMessage":"Endpoint is already belong to other service","detail":"Find the same endpoints in service c3de3e1c361111e89c8f0255ac105519"}

2018-04-02 10:03:14.393 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-04-02 10:04:11.612 +08:00 WARN servicecenter/servicecenter.go:431 b99b2a46360f11e89c8f0255ac105519 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-04-02 10:04:11.686 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer b99b2a46360f11e89c8f0255ac105519 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-04-02 10:04:12.222 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-04-02 10:04:18.455 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-04-02 10:05:53.926 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [F:\nl-code\mesher\provider\mesher\conf\chassis.yaml F:\nl-code\mesher\provider\mesher\conf\microservice.yaml], Configuration Paths [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml F:\nl-code\mesher\provider\mesher\conf\tls.yaml F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml F:\nl-code\mesher\provider\mesher\conf\auth.yaml F:\nl-code\mesher\provider\mesher\conf\tracing.yaml]
2018-04-02 10:05:53.927 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-04-02 10:05:53.927 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-04-02 10:05:53.928 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\circuit_breaker.yaml] file not exist
2018-04-02 10:05:53.928 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\load_balancing.yaml] file not exist
2018-04-02 10:05:53.928 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\rate_limiting.yaml] file not exist
2018-04-02 10:05:53.928 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tls.yaml] file not exist
2018-04-02 10:05:53.929 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\monitoring.yaml] file not exist
2018-04-02 10:05:53.929 +08:00 INFO archaius/archaius.go:44 [F:\nl-code\mesher\provider\mesher\conf\tracing.yaml] file not exist
2018-04-02 10:05:53.929 +08:00 INFO config/config.go:235 archaius init success
2018-04-02 10:05:53.930 +08:00 INFO config/router_config.go:71 Load route rules from file: F:\nl-code\mesher\provider\mesher\conf\router.yaml
2018-04-02 10:05:53.931 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-04-02 10:05:53.932 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-04-02 10:05:53.932 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-04-02 10:05:53.933 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-04-02 10:05:53.936 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-04-02 10:05:53.936 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-04-02 10:05:53.936 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = cxf-provider-sbdemo. error: microservice cxf-provider-sbdemo not found
2018-04-02 10:05:53.936 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-04-02 10:05:53.937 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-04-02 10:05:54.156 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [cxf-provider-sbdemo:0.0.1:cxf-mesh] exists in registry, no need register
2018-04-02 10:05:54.156 +08:00 WARN registry/bootstrap.go:54 Register microservice [cxf-provider-sbdemo] success
2018-04-02 10:05:54.222 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-04-02 10:05:54.468 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-04-02 10:05:54.468 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-04-02 10:05:54.471 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-04-02 10:05:54.472 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-04-02 10:05:54.678 +08:00 WARN config-center/config_center.go:78 config center init success
2018-04-02 10:05:54.679 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-04-02 10:05:54.685 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-04-02 10:05:54.686 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-04-02 10:05:54.687 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-04-02 10:05:54.688 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:05:54.689 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:05:54.694 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:05:54.694 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:05:54.696 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:05:54.696 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:05:54.697 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:05:54.697 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-04-02 10:05:54.697 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-04-02 10:05:54.713 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-04-02 10:05:54.714 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-04-02 10:05:54.715 +08:00 INFO adminapi/router.go:26 init router
2018-04-02 10:05:55.715 +08:00 INFO adminapi/router.go:82 admin server start success
2018-04-02 10:05:55.716 +08:00 INFO server/server_manager.go:62 starting server http...
2018-04-02 10:05:55.718 +08:00 INFO server/server_manager.go:68 http server start success
2018-04-02 10:05:55.719 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-04-02 10:05:55.719 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-04-02 10:05:55.855 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: b99b2a46360f11e89c8f0255ac105519/61bff361361a11e891230255ac105117
2018-04-02 10:05:55.855 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: b99b2a46360f11e89c8f0255ac105519/61bff361361a11e891230255ac105117
2018-04-02 10:05:55.856 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: b99b2a46360f11e89c8f0255ac105519
2018-04-02 10:05:55.857 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:b99b2a46360f11e89c8f0255ac105519/61bff361361a11e891230255ac105117
2018-04-02 10:05:55.857 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: b99b2a46360f11e89c8f0255ac105519/61bff361361a11e891230255ac105117.
2018-04-02 10:05:55.858 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: b99b2a46360f11e89c8f0255ac105519/61bff361361a11e891230255ac105117.
2018-04-02 10:05:56.891 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-04-02 10:06:24.198 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-04-02 10:06:24.198 +08:00 INFO client/client_manager.go:97 Create client for cxf-provider-sbdemo
2018-04-02 10:06:24.697 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-04-02 10:06:30.905 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-04-02 10:12:56.636 +08:00 WARN servicecenter/servicecenter.go:431 b99b2a46360f11e89c8f0255ac105519 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-04-02 10:12:56.713 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer b99b2a46360f11e89c8f0255ac105519 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-04-02 10:12:56.858 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: json: unsupported value: +Inf
2018-04-02 10:12:58.371 +08:00 WARN servicecenter/servicecenter.go:431 b99b2a46360f11e89c8f0255ac105519 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-04-02 10:12:58.449 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer b99b2a46360f11e89c8f0255ac105519 find provider default/cxf-provider-sbdemo/0.0.1"}

2018-04-02 10:12:59.070 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-04-02 10:13:05.073 +08:00 WARN servicecenter/servicecenter.go:431 b99b2a46360f11e89c8f0255ac105519 Get instances from remote, key: cxf-provider-sbdemo:0.0.1:default
2018-04-02 10:13:05.139 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: cxf-provider-sbdemo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/cxf-provider-sbdemo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer b99b2a46360f11e89c8f0255ac105519 find provider default/cxf-provider-sbdemo/0.0.1"}

