2018-03-29 17:16:22.115 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-29 17:16:22.115 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-29 17:16:22.115 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-29 17:16:22.115 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-29 17:16:22.115 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-29 17:16:22.115 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-29 17:16:22.115 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-29 17:16:22.115 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-29 17:16:22.115 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-29 17:16:22.115 +08:00 INFO config/config.go:235 archaius init success
2018-03-29 17:16:22.115 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-29 17:16:22.116 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-29 17:16:22.116 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-29 17:16:22.116 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-29 17:16:22.116 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-29 17:16:22.116 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-29 17:16:22.116 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = provider-sb-demo. error: microservice provider-sb-demo not found
2018-03-29 17:16:22.116 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-29 17:16:22.116 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-29 17:16:22.118 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-29 17:16:22.424 +08:00 WARN servicecenter/servicecenter.go:34 Microservice [provider-sb-demo:0.0.1:provider-sb] not exists in registry, register it
2018-03-29 17:16:22.515 +08:00 WARN registry/bootstrap.go:54 Register microservice [provider-sb-demo] success
2018-03-29 17:16:22.598 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-29 17:16:22.973 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-29 17:16:22.973 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-29 17:16:22.973 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-29 17:16:22.974 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-29 17:16:23.309 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-29 17:16:23.309 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-29 17:16:23.309 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-29 17:16:23.309 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-29 17:16:23.309 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-29 17:16:23.311 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 17:16:23.311 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 17:16:23.311 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 17:16:23.311 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 17:16:23.315 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 17:16:23.316 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 17:16:23.315 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 17:16:23.316 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 17:16:23.316 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-29 17:16:23.317 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-29 17:16:23.317 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-29 17:16:23.317 +08:00 INFO adminapi/router.go:26 init router
2018-03-29 17:16:24.320 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-29 17:16:24.321 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-29 17:16:24.321 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-29 17:16:24.321 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-29 17:16:24.321 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-29 17:16:24.492 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: ef7c0f00333311e89c8f0255ac105519/f0ab18c6333311e891230255ac105117
2018-03-29 17:16:24.492 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: ef7c0f00333311e89c8f0255ac105519/f0ab18c6333311e891230255ac105117
2018-03-29 17:16:24.492 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: ef7c0f00333311e89c8f0255ac105519
2018-03-29 17:16:24.492 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:ef7c0f00333311e89c8f0255ac105519/f0ab18c6333311e891230255ac105117
2018-03-29 17:16:24.492 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: ef7c0f00333311e89c8f0255ac105519/f0ab18c6333311e891230255ac105117.
2018-03-29 17:16:24.492 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: ef7c0f00333311e89c8f0255ac105519/f0ab18c6333311e891230255ac105117.
2018-03-29 17:16:25.513 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-29 17:17:08.789 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-29 17:17:08.789 +08:00 INFO client/client_manager.go:97 Create client for provider-sb-demo
2018-03-29 20:52:11.796 +08:00 WARN configcenter-source/configcentersource.go:338 Failed to pull configurations from config center server error: Unable to connect to ServiceCenter.error: Get https://cse.cn-north-1.myhwclouds.com:443/v3/default/configuration/items?dimensionsInfo=provider-sb-demo@provider-sb%230.0.1: read tcp 10.0.2.4:51804->43.254.0.22:443: read: connection reset by peer
2018-03-29 20:52:13.767 +08:00 ERROR servicecenter/servicecenter.go:136 Heartbeat failed, microServiceID/instanceID: ef7c0f00333311e89c8f0255ac105519/f0ab18c6333311e891230255ac105117. error: Unable to connect to ServiceCenter.error: Put https://cse.cn-north-1.myhwclouds.com:443/v4/default/registry/microservices/ef7c0f00333311e89c8f0255ac105519/instances/f0ab18c6333311e891230255ac105117/heartbeat: read tcp 10.0.2.4:51802->43.254.0.22:443: read: connection reset by peer
2018-03-29 20:52:13.768 +08:00 ERROR registry/heartbeat.go:95 Run Heartbeat fail error: Unable to connect to ServiceCenter.error: Put https://cse.cn-north-1.myhwclouds.com:443/v4/default/registry/microservices/ef7c0f00333311e89c8f0255ac105519/instances/f0ab18c6333311e891230255ac105117/heartbeat: read tcp 10.0.2.4:51802->43.254.0.22:443: read: connection reset by peer
2018-03-29 20:52:19.528 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: Post https://cse.cn-north-1.myhwclouds.com:443/v2/default/csemonitor/metric?service=provider-sb-demo: dial tcp: i/o timeout
2018-03-29 20:52:19.528 +08:00 ERROR servicecenter/cache.go:179 get Providers failed, sid = ef7c0f00333311e89c8f0255ac105519 error: Get Providers failed, error: Unable to connect to ServiceCenter.error: Get https://cse.cn-north-1.myhwclouds.com:443/v4/default/registry/microservices/ef7c0f00333311e89c8f0255ac105519/providers: dial tcp: lookup cse.cn-north-1.myhwclouds.com on 192.168.43.1:53: dial udp 192.168.43.1:53: i/o timeout, MicroServiceid: ef7c0f00333311e89c8f0255ac105519
2018-03-29 20:52:19.529 +08:00 ERROR servicecenter/cache.go:73 AutoUpdateMicroserviceInstance failed. error: Get Providers failed, error: Unable to connect to ServiceCenter.error: Get https://cse.cn-north-1.myhwclouds.com:443/v4/default/registry/microservices/ef7c0f00333311e89c8f0255ac105519/providers: dial tcp: lookup cse.cn-north-1.myhwclouds.com on 192.168.43.1:53: dial udp 192.168.43.1:53: i/o timeout, MicroServiceid: ef7c0f00333311e89c8f0255ac105519
2018-03-29 20:52:20.008 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-29 20:52:23.768 +08:00 INFO registry/heartbeat.go:125 Try to re-register self
2018-03-29 20:52:25.356 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: ef7c0f00333311e89c8f0255ac105519
2018-03-29 20:52:25.357 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:ef7c0f00333311e89c8f0255ac105519/08af802e335011e89c8f0255ac105519
2018-03-29 20:52:25.357 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: ef7c0f00333311e89c8f0255ac105519/08af802e335011e89c8f0255ac105519.
2018-03-29 20:52:25.357 +08:00 WARN registry/heartbeat.go:185 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: /08af802e335011e89c8f0255ac105519
2018-03-29 20:52:25.357 +08:00 WARN registry/heartbeat.go:189 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: /08af802e335011e89c8f0255ac105519
2018-03-29 20:52:25.357 +08:00 WARN registry/heartbeat.go:201 RegisterMicroServiceInstance success, microServiceID/instanceID: /08af802e335011e89c8f0255ac105519.
2018-03-29 20:52:25.357 +08:00 WARN registry/heartbeat.go:139 Re-register self success
2018-03-29 20:52:41.811 +08:00 INFO configcenter-source/configcentersource.go:318 Recover configurations from config center server
2018-03-29 21:03:07.417 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-29 21:03:07.417 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-29 21:03:07.417 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-29 21:03:07.419 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-29 21:03:07.419 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-29 21:03:07.419 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-29 21:03:07.419 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-29 21:03:07.419 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-29 21:03:07.419 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-29 21:03:07.419 +08:00 INFO config/config.go:235 archaius init success
2018-03-29 21:03:07.419 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-29 21:03:07.422 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-29 21:03:07.422 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-29 21:03:07.423 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-29 21:03:07.423 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-29 21:03:07.423 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-29 21:03:07.423 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = provider-sb-demo. error: microservice provider-sb-demo not found
2018-03-29 21:03:07.423 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-29 21:03:07.423 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-29 21:03:07.426 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-29 21:03:09.046 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [provider-sb-demo:0.0.1:provider-sb] exists in registry, no need register
2018-03-29 21:03:09.046 +08:00 WARN registry/bootstrap.go:54 Register microservice [provider-sb-demo] success
2018-03-29 21:03:09.244 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-29 21:03:09.494 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-29 21:03:09.494 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-29 21:03:09.495 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-29 21:03:09.495 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-29 21:03:09.754 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-29 21:03:09.755 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-29 21:03:09.755 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-29 21:03:09.755 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-29 21:03:09.755 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-29 21:03:09.756 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 21:03:09.756 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 21:03:09.757 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 21:03:09.757 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 21:03:09.758 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 21:03:09.758 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 21:03:09.763 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-29 21:03:09.764 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 21:03:09.764 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-29 21:03:09.764 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 21:03:09.764 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-29 21:03:09.764 +08:00 INFO adminapi/router.go:26 init router
2018-03-29 21:03:10.774 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-29 21:03:10.775 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-29 21:03:10.775 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-29 21:03:10.775 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-29 21:03:10.775 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-29 21:03:10.938 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: ef7c0f00333311e89c8f0255ac105519/89880b71335111e891230255ac105117
2018-03-29 21:03:10.938 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: ef7c0f00333311e89c8f0255ac105519/89880b71335111e891230255ac105117
2018-03-29 21:03:10.938 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: ef7c0f00333311e89c8f0255ac105519
2018-03-29 21:03:10.938 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:ef7c0f00333311e89c8f0255ac105519/89880b71335111e891230255ac105117
2018-03-29 21:03:10.938 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: ef7c0f00333311e89c8f0255ac105519/89880b71335111e891230255ac105117.
2018-03-29 21:03:10.938 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: ef7c0f00333311e89c8f0255ac105519/89880b71335111e891230255ac105117.
2018-03-29 21:03:12.052 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-29 21:06:38.987 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-29 21:06:38.987 +08:00 INFO client/client_manager.go:97 Create client for provider-sb-demo
2018-03-29 21:07:28.936 +08:00 INFO go-chassis/chassis.go:215 got os signal interrupt
2018-03-29 21:07:28.936 +08:00 INFO go-chassis/chassis.go:220 stopping server http...
2018-03-29 21:07:28.936 +08:00 INFO go-chassis/chassis.go:225 http server stop success
2018-03-29 22:31:11.121 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-29 22:31:11.122 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-29 22:31:11.122 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-29 22:31:11.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-29 22:31:11.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-29 22:31:11.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-29 22:31:11.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-29 22:31:11.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-29 22:31:11.140 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-29 22:31:11.140 +08:00 INFO config/config.go:235 archaius init success
2018-03-29 22:31:11.140 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-29 22:31:11.156 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-29 22:31:11.156 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-29 22:31:11.156 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-29 22:31:11.156 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-29 22:31:11.156 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-29 22:31:11.156 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = provider-sb-demo. error: microservice provider-sb-demo not found
2018-03-29 22:31:11.156 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-29 22:31:11.156 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-29 22:31:11.157 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-29 22:31:11.473 +08:00 WARN servicecenter/servicecenter.go:34 Microservice [provider-sb-demo:0.0.1:provider-sb] not exists in registry, register it
2018-03-29 22:31:11.546 +08:00 WARN registry/bootstrap.go:54 Register microservice [provider-sb-demo] success
2018-03-29 22:31:11.611 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-29 22:31:11.974 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-29 22:31:11.974 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-29 22:31:11.975 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-29 22:31:11.975 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-29 22:31:12.210 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-29 22:31:12.210 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-29 22:31:12.211 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-29 22:31:12.211 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-29 22:31:12.211 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-29 22:31:12.221 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 22:31:12.221 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 22:31:12.222 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 22:31:12.222 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 22:31:12.223 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 22:31:12.224 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 22:31:12.228 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-29 22:31:12.228 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 22:31:12.228 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-29 22:31:12.229 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-29 22:31:12.229 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-29 22:31:12.229 +08:00 INFO adminapi/router.go:26 init router
2018-03-29 22:31:13.229 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-29 22:31:13.229 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-29 22:31:13.230 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-29 22:31:13.230 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-29 22:31:13.230 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-29 22:31:13.390 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: 8f21b825335f11e89c8f0255ac105519/9039c1a3335f11e89c8f0255ac105519
2018-03-29 22:31:13.390 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: 8f21b825335f11e89c8f0255ac105519/9039c1a3335f11e89c8f0255ac105519
2018-03-29 22:31:13.390 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: 8f21b825335f11e89c8f0255ac105519
2018-03-29 22:31:13.390 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:8f21b825335f11e89c8f0255ac105519/9039c1a3335f11e89c8f0255ac105519
2018-03-29 22:31:13.390 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: 8f21b825335f11e89c8f0255ac105519/9039c1a3335f11e89c8f0255ac105519.
2018-03-29 22:31:13.390 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: 8f21b825335f11e89c8f0255ac105519/9039c1a3335f11e89c8f0255ac105519.
2018-03-29 22:31:14.470 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-29 22:32:35.316 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-29 22:32:35.316 +08:00 INFO client/client_manager.go:97 Create client for provider-sb-demo
2018-03-29 22:32:35.316 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: dial tcp4 127.0.0.1:8080: getsockopt: connection refused
2018-03-29 22:32:35.450 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: dial tcp4 127.0.0.1:8080: getsockopt: connection refused
2018-03-29 22:32:41.554 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: dial tcp4 127.0.0.1:8080: getsockopt: connection refused
2018-03-29 22:33:48.791 +08:00 ERROR handler/transport_handler.go:52 Call got Error error: dial tcp4 127.0.0.1:8080: getsockopt: connection refused
2018-03-29 23:29:51.879 +08:00 WARN servicecenter/servicecenter.go:431 8f21b825335f11e89c8f0255ac105519 Get instances from remote, key: localhost:30101:0.0.1:default
2018-03-29 23:29:51.945 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: localhost:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/localhost:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer 8f21b825335f11e89c8f0255ac105519 find provider default/localhost:30101/0.0.1"}

2018-03-29 23:29:51.973 +08:00 WARN servicecenter/servicecenter.go:431 8f21b825335f11e89c8f0255ac105519 Get instances from remote, key: localhost:30101:0.0.1:default
2018-03-29 23:29:52.037 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: localhost:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/localhost:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer 8f21b825335f11e89c8f0255ac105519 find provider default/localhost:30101/0.0.1"}

2018-03-29 23:29:54.860 +08:00 WARN servicecenter/servicecenter.go:431 8f21b825335f11e89c8f0255ac105519 Get instances from remote, key: localhost:30101:0.0.1:default
2018-03-29 23:29:54.917 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: localhost:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/localhost:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer 8f21b825335f11e89c8f0255ac105519 find provider default/localhost:30101/0.0.1"}

2018-03-29 23:29:55.636 +08:00 WARN servicecenter/servicecenter.go:431 8f21b825335f11e89c8f0255ac105519 Get instances from remote, key: localhost:30101:0.0.1:default
2018-03-29 23:29:55.714 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: localhost:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/localhost:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer 8f21b825335f11e89c8f0255ac105519 find provider default/localhost:30101/0.0.1"}

2018-03-29 23:29:56.908 +08:00 WARN servicecenter/servicecenter.go:431 8f21b825335f11e89c8f0255ac105519 Get instances from remote, key: localhost:30101:0.0.1:default
2018-03-29 23:29:56.965 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: localhost:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/localhost:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer 8f21b825335f11e89c8f0255ac105519 find provider default/localhost:30101/0.0.1"}

2018-03-29 23:33:26.225 +08:00 WARN cse-collector/csemonitor.go:61 Unable to connect to monitoring server error: Post https://cse.cn-north-1.myhwclouds.com:443/v2/default/csemonitor/metric?service=provider-sb-demo: dial tcp: lookup cse.cn-north-1.myhwclouds.com on 192.168.0.1:53: server misbehaving
2018-03-29 23:33:28.544 +08:00 INFO cse-collector/csemonitor.go:72 Connection recovered successfully to monitoring server
2018-03-30 00:04:42.164 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-30 00:04:42.164 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 00:04:42.164 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 00:04:42.165 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-30 00:04:42.165 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-30 00:04:42.165 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-30 00:04:42.165 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-30 00:04:42.165 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-30 00:04:42.166 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-30 00:04:42.166 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 00:04:42.166 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-30 00:04:42.168 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 00:04:42.168 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 00:04:42.169 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:04:42.169 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 00:04:42.169 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 00:04:42.169 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = provider-sb-demo. error: microservice provider-sb-demo not found
2018-03-30 00:04:42.169 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 00:04:42.169 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 00:04:42.169 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 00:04:42.449 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [provider-sb-demo:0.0.1:provider-sb] exists in registry, no need register
2018-03-30 00:04:42.449 +08:00 WARN registry/bootstrap.go:54 Register microservice [provider-sb-demo] success
2018-03-30 00:04:42.513 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 00:04:42.818 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 00:04:42.818 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 00:04:42.818 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 00:04:42.818 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:04:43.397 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 00:04:43.397 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 00:04:43.397 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 00:04:43.397 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 00:04:43.397 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 00:04:43.397 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:04:43.398 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:04:43.398 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:04:43.398 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:04:43.398 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:04:43.398 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:04:43.399 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:04:43.399 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:04:43.399 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 00:04:43.400 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 00:04:43.400 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 00:04:43.400 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 00:04:44.401 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 00:04:44.401 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 00:04:44.401 +08:00 ERROR server/server_manager.go:65 servers failed to start error: listen tcp4 192.168.56.101:30101: bind: cannot assign requested address
2018-03-30 00:04:44.401 +08:00 ERROR go-chassis/chassis.go:204 run chassis fail: error: Can not start [http] server,listen tcp4 192.168.56.101:30101: bind: cannot assign requested address
2018-03-30 00:04:44.401 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 00:04:44.524 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: 8f21b825335f11e89c8f0255ac105519/9039c1a3335f11e89c8f0255ac105519
2018-03-30 00:04:44.524 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: 8f21b825335f11e89c8f0255ac105519/9039c1a3335f11e89c8f0255ac105519
2018-03-30 00:04:44.524 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: 8f21b825335f11e89c8f0255ac105519
2018-03-30 00:04:44.524 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:8f21b825335f11e89c8f0255ac105519/9039c1a3335f11e89c8f0255ac105519
2018-03-30 00:04:44.524 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: 8f21b825335f11e89c8f0255ac105519/9039c1a3335f11e89c8f0255ac105519.
2018-03-30 00:04:44.524 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: 8f21b825335f11e89c8f0255ac105519/9039c1a3335f11e89c8f0255ac105519.
2018-03-30 00:04:45.646 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 00:04:56.003 +08:00 WARN file-source/yamlconfigurationsource.go:428 the file change mode: "/root/tmp/mesher/conf/.chassis.yaml.swp": REMOVE. So stop watching file
2018-03-30 00:07:19.416 +08:00 INFO go-chassis/chassis.go:215 got os signal interrupt
2018-03-30 00:07:19.417 +08:00 INFO go-chassis/chassis.go:220 stopping server http...
2018-03-30 00:07:19.417 +08:00 INFO go-chassis/chassis.go:225 http server stop success
2018-03-30 00:10:23.129 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-30 00:10:23.129 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 00:10:23.129 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 00:10:23.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-30 00:10:23.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-30 00:10:23.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-30 00:10:23.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-30 00:10:23.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-30 00:10:23.130 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-30 00:10:23.130 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 00:10:23.130 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-30 00:10:23.131 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 00:10:23.131 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 00:10:23.131 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 00:10:23.132 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:10:23.132 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 00:10:23.132 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 00:10:23.132 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = provider-sb-demo. error: microservice provider-sb-demo not found
2018-03-30 00:10:23.132 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 00:10:23.132 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 00:10:23.397 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [provider-sb-demo:0.0.1:provider-sb] exists in registry, no need register
2018-03-30 00:10:23.397 +08:00 WARN registry/bootstrap.go:54 Register microservice [provider-sb-demo] success
2018-03-30 00:10:23.464 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 00:10:23.653 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 00:10:23.653 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 00:10:23.654 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 00:10:23.654 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:10:23.961 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 00:10:23.961 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 00:10:23.962 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 00:10:23.962 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 00:10:23.962 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 00:10:23.963 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:10:23.963 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:10:23.963 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:10:23.964 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:10:23.964 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:10:23.964 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:10:23.968 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:10:23.968 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
#admin: #admin API
#  serverUri : 127.0.0.1:30102 # 在哪个地址监听
#  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:10:23.969 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 00:10:23.970 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 00:10:23.970 +08:00 INFO adminapi/router.go:72 admin server listening on [::]:30102
2018-03-30 00:10:23.970 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 00:10:24.971 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 00:10:24.971 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 00:10:24.971 +08:00 ERROR server/server_manager.go:65 servers failed to start error: address https://cse.cn-north-1.myhwclouds.com:443: too many colons in address
2018-03-30 00:10:24.971 +08:00 ERROR go-chassis/chassis.go:204 run chassis fail: error: Can not start [http] server,address https://cse.cn-north-1.myhwclouds.com:443: too many colons in address
2018-03-30 00:10:24.971 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 00:10:25.108 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: 8f21b825335f11e89c8f0255ac105519/b2731757336b11e891230255ac105117
2018-03-30 00:10:25.108 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: 8f21b825335f11e89c8f0255ac105519/b2731757336b11e891230255ac105117
2018-03-30 00:10:25.108 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: 8f21b825335f11e89c8f0255ac105519
2018-03-30 00:10:25.108 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:8f21b825335f11e89c8f0255ac105519/b2731757336b11e891230255ac105117
2018-03-30 00:10:25.108 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: 8f21b825335f11e89c8f0255ac105519/b2731757336b11e891230255ac105117.
2018-03-30 00:10:25.108 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: 8f21b825335f11e89c8f0255ac105519/b2731757336b11e891230255ac105117.
2018-03-30 00:10:26.253 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 00:10:44.219 +08:00 INFO go-chassis/chassis.go:215 got os signal interrupt
2018-03-30 00:10:44.220 +08:00 INFO go-chassis/chassis.go:220 stopping server http...
2018-03-30 00:10:44.220 +08:00 INFO go-chassis/chassis.go:225 http server stop success
2018-03-30 00:20:01.281 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-30 00:20:01.281 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 00:20:01.281 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 00:20:01.281 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-30 00:20:01.281 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-30 00:20:01.281 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-30 00:20:01.281 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-30 00:20:01.281 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-30 00:20:01.281 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-30 00:20:01.281 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 00:20:01.282 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-30 00:20:01.282 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 00:20:01.282 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 00:20:01.282 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:20:01.282 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 00:20:01.282 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 00:20:01.282 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = provider-sb-demo. error: microservice provider-sb-demo not found
2018-03-30 00:20:01.283 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 00:20:01.283 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 00:20:01.284 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
routeRule:
  provider-sb-demo: #这里就是请求里的host,也是sc里的service name
    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
      route: #路由规则列表
      - tags:
          version: 0.0.1 #对接service center的话，如果不填就自动为0.1
          app: provider-sb #对接service center的话，如果不填就自动为default
2018-03-30 00:20:01.584 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [provider-sb-demo:0.0.1:provider-sb] exists in registry, no need register
2018-03-30 00:20:01.584 +08:00 WARN registry/bootstrap.go:54 Register microservice [provider-sb-demo] success
2018-03-30 00:20:01.666 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 00:20:01.965 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 00:20:01.965 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 00:20:01.966 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 00:20:01.966 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:20:02.270 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 00:20:02.270 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 00:20:02.270 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 00:20:02.270 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 00:20:02.271 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 00:20:02.271 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:20:02.272 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:20:02.272 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:20:02.272 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:20:02.275 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:20:02.273 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:20:02.280 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 00:20:02.281 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:20:02.281 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:20:02.282 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 00:20:02.282 +08:00 INFO adminapi/router.go:72 admin server listening on 127.0.0.1:40102
2018-03-30 00:20:02.282 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 00:20:03.398 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 00:20:03.398 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 00:20:03.399 +08:00 ERROR server/server_manager.go:65 servers failed to start error: listen tcp4 192.168.56.101:30101: bind: cannot assign requested address
2018-03-30 00:20:03.399 +08:00 ERROR go-chassis/chassis.go:204 run chassis fail: error: Can not start [http] server,listen tcp4 192.168.56.101:30101: bind: cannot assign requested address
2018-03-30 00:20:03.399 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 00:20:03.530 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: 8f21b825335f11e89c8f0255ac105519/59705862336b11e891230255ac105117
2018-03-30 00:20:03.530 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: 8f21b825335f11e89c8f0255ac105519/59705862336b11e891230255ac105117
2018-03-30 00:20:03.530 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: 8f21b825335f11e89c8f0255ac105519
2018-03-30 00:20:03.530 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:8f21b825335f11e89c8f0255ac105519/59705862336b11e891230255ac105117
2018-03-30 00:20:03.530 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: 8f21b825335f11e89c8f0255ac105519/59705862336b11e891230255ac105117.
2018-03-30 00:20:03.530 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: 8f21b825335f11e89c8f0255ac105519/59705862336b11e891230255ac105117.
2018-03-30 00:20:04.527 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 00:22:00.123 +08:00 INFO go-chassis/chassis.go:215 got os signal interrupt
2018-03-30 00:22:00.123 +08:00 INFO go-chassis/chassis.go:220 stopping server http...
2018-03-30 00:22:00.123 +08:00 INFO go-chassis/chassis.go:225 http server stop success
2018-03-30 00:23:27.621 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-30 00:23:27.621 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 00:23:27.621 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 00:23:27.621 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-30 00:23:27.621 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-30 00:23:27.621 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-30 00:23:27.622 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-30 00:23:27.622 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-30 00:23:27.622 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-30 00:23:27.622 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 00:23:27.622 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-30 00:23:27.622 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 00:23:27.623 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 00:23:27.623 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:23:27.623 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 00:23:27.623 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 00:23:27.623 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = provider-sb-demo. error: microservice provider-sb-demo not found
2018-03-30 00:23:27.623 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 00:23:27.623 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 00:23:27.623 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
routeRule:
  provider-sb-demo: #这里就是请求里的host,也是sc里的service name
    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
      route: #路由规则列表
      - tags:
          version: 0.0.1 #对接service center的话，如果不填就自动为0.1
          app: provider-sb #对接service center的话，如果不填就自动为default
2018-03-30 00:23:27.894 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [provider-sb-demo:0.0.1:provider-sb] exists in registry, no need register
2018-03-30 00:23:27.894 +08:00 WARN registry/bootstrap.go:54 Register microservice [provider-sb-demo] success
2018-03-30 00:23:27.951 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 00:23:28.236 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 00:23:28.236 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 00:23:28.236 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 00:23:28.236 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:23:28.505 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 00:23:28.505 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 00:23:28.506 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 00:23:28.506 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 00:23:28.506 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 00:23:28.507 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:23:28.507 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:23:28.508 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:23:28.508 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:23:28.509 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:23:28.509 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:23:28.513 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:23:28.514 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:23:28.515 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 00:23:28.517 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 00:23:28.517 +08:00 INFO adminapi/router.go:72 admin server listening on 127.0.0.1:40102
2018-03-30 00:23:28.517 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 00:23:29.519 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 00:23:29.519 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 00:23:29.519 +08:00 ERROR server/server_manager.go:65 servers failed to start error: listen tcp4 192.168.56.101:30101: bind: cannot assign requested address
2018-03-30 00:23:29.519 +08:00 ERROR go-chassis/chassis.go:204 run chassis fail: error: Can not start [http] server,listen tcp4 192.168.56.101:30101: bind: cannot assign requested address
2018-03-30 00:23:29.520 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 00:23:29.647 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: 8f21b825335f11e89c8f0255ac105519/5f1d5707336d11e891230255ac105117
2018-03-30 00:23:29.647 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: 8f21b825335f11e89c8f0255ac105519/5f1d5707336d11e891230255ac105117
2018-03-30 00:23:29.647 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: 8f21b825335f11e89c8f0255ac105519
2018-03-30 00:23:29.647 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:8f21b825335f11e89c8f0255ac105519/5f1d5707336d11e891230255ac105117
2018-03-30 00:23:29.647 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: 8f21b825335f11e89c8f0255ac105519/5f1d5707336d11e891230255ac105117.
2018-03-30 00:23:29.647 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: 8f21b825335f11e89c8f0255ac105519/5f1d5707336d11e891230255ac105117.
2018-03-30 00:23:30.822 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 00:24:22.469 +08:00 INFO go-chassis/chassis.go:215 got os signal interrupt
2018-03-30 00:24:22.469 +08:00 INFO go-chassis/chassis.go:220 stopping server http...
2018-03-30 00:24:22.469 +08:00 INFO go-chassis/chassis.go:225 http server stop success
2018-03-30 00:26:11.403 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-30 00:26:11.403 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 00:26:11.403 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 00:26:11.403 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-30 00:26:11.403 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-30 00:26:11.403 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-30 00:26:11.403 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-30 00:26:11.403 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-30 00:26:11.404 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-30 00:26:11.404 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 00:26:11.404 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-30 00:26:11.405 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 00:26:11.405 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 00:26:11.405 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:26:11.405 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 00:26:11.405 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 00:26:11.405 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = consumer-sb-demo. error: microservice consumer-sb-demo not found
2018-03-30 00:26:11.405 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 00:26:11.405 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 00:26:11.407 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
routeRule:
  provider-sb-demo: #这里就是请求里的host,也是sc里的service name
    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
      route: #路由规则列表
      - tags:
          version: 0.0.1 #对接service center的话，如果不填就自动为0.1
          app: provider-sb #对接service center的话，如果不填就自动为default
2018-03-30 00:26:11.680 +08:00 WARN servicecenter/servicecenter.go:34 Microservice [consumer-sb-demo:0.0.1:provider-sb] not exists in registry, register it
2018-03-30 00:26:11.760 +08:00 WARN registry/bootstrap.go:54 Register microservice [consumer-sb-demo] success
2018-03-30 00:26:11.842 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 00:26:12.141 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 00:26:12.141 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 00:26:12.141 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 00:26:12.141 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 00:26:12.141 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 00:26:12.141 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:26:12.396 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 00:26:12.396 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 00:26:12.396 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 00:26:12.397 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:26:12.397 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:26:12.397 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:26:12.397 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:26:12.397 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:26:12.400 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 00:26:12.401 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 00:26:12.401 +08:00 INFO adminapi/router.go:72 admin server listening on 127.0.0.1:40102
2018-03-30 00:26:12.401 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 00:26:12.401 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:26:12.401 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:26:12.401 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:26:13.401 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 00:26:13.401 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 00:26:13.402 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 00:26:13.402 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 00:26:13.402 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 00:26:13.554 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: e66bef75336d11e89c8f0255ac105519/e77e4258336d11e89c8f0255ac105519
2018-03-30 00:26:13.554 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: e66bef75336d11e89c8f0255ac105519/e77e4258336d11e89c8f0255ac105519
2018-03-30 00:26:13.554 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: e66bef75336d11e89c8f0255ac105519
2018-03-30 00:26:13.554 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:e66bef75336d11e89c8f0255ac105519/e77e4258336d11e89c8f0255ac105519
2018-03-30 00:26:13.554 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: e66bef75336d11e89c8f0255ac105519/e77e4258336d11e89c8f0255ac105519.
2018-03-30 00:26:13.554 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: e66bef75336d11e89c8f0255ac105519/e77e4258336d11e89c8f0255ac105519.
2018-03-30 00:26:14.410 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 00:38:05.634 +08:00 INFO go-chassis/chassis.go:215 got os signal interrupt
2018-03-30 00:38:05.634 +08:00 INFO go-chassis/chassis.go:220 stopping server http...
2018-03-30 00:38:05.634 +08:00 INFO go-chassis/chassis.go:225 http server stop success
2018-03-30 00:39:15.198 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-30 00:39:15.198 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 00:39:15.199 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 00:39:15.199 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-30 00:39:15.199 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-30 00:39:15.199 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-30 00:39:15.199 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-30 00:39:15.199 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-30 00:39:15.199 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-30 00:39:15.199 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 00:39:15.199 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-30 00:39:15.200 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 00:39:15.200 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 00:39:15.200 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:39:15.200 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 00:39:15.200 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 00:39:15.200 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = consumer-sb-demo. error: microservice consumer-sb-demo not found
2018-03-30 00:39:15.200 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 00:39:15.200 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 00:39:15.201 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
routeRule:
  provider-sb-demo: #这里就是请求里的host,也是sc里的service name
    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
      route: #路由规则列表
      - tags:
          version: 0.0.1 #对接service center的话，如果不填就自动为0.1
          app: provider-sb #对接service center的话，如果不填就自动为default
2018-03-30 00:39:15.463 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [consumer-sb-demo:0.0.1:provider-sb] exists in registry, no need register
2018-03-30 00:39:15.463 +08:00 WARN registry/bootstrap.go:54 Register microservice [consumer-sb-demo] success
2018-03-30 00:39:15.528 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 00:39:15.811 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 00:39:15.811 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 00:39:15.811 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 00:39:15.811 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:39:16.068 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 00:39:16.068 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 00:39:16.068 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 00:39:16.068 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 00:39:16.068 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 00:39:16.069 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:39:16.069 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:39:16.070 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:39:16.070 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:39:16.071 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:39:16.071 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:39:16.076 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:39:16.076 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 00:39:16.076 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:39:16.078 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 00:39:16.079 +08:00 INFO adminapi/router.go:72 admin server listening on 127.0.0.1:40102
2018-03-30 00:39:16.079 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 00:39:17.091 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 00:39:17.091 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 00:39:17.092 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 00:39:17.092 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 00:39:17.092 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 00:39:17.226 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: e66bef75336d11e89c8f0255ac105519/ba5d4a10336f11e89c8f0255ac105519
2018-03-30 00:39:17.226 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: e66bef75336d11e89c8f0255ac105519/ba5d4a10336f11e89c8f0255ac105519
2018-03-30 00:39:17.226 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: e66bef75336d11e89c8f0255ac105519
2018-03-30 00:39:17.226 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:e66bef75336d11e89c8f0255ac105519/ba5d4a10336f11e89c8f0255ac105519
2018-03-30 00:39:17.226 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: e66bef75336d11e89c8f0255ac105519/ba5d4a10336f11e89c8f0255ac105519.
2018-03-30 00:39:17.226 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: e66bef75336d11e89c8f0255ac105519/ba5d4a10336f11e89c8f0255ac105519.
2018-03-30 00:39:18.338 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 00:53:08.342 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:provider-sb
2018-03-30 00:53:08.411 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-30 00:53:08.411 +08:00 INFO client/client_manager.go:97 Create client for provider-sb-demo
2018-03-30 00:54:43.496 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: 192.168.56.101:30101:0.0.1:default
2018-03-30 00:54:43.757 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 192.168.56.101:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/192.168.56.101:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/192.168.56.101:30101/0.0.1"}

2018-03-30 00:54:46.075 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: 192.168.56.101:30101:0.0.1:default
2018-03-30 00:54:46.189 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 192.168.56.101:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/192.168.56.101:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/192.168.56.101:30101/0.0.1"}

2018-03-30 00:54:46.269 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: 192.168.56.101:30101:0.0.1:default
2018-03-30 00:54:46.346 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 192.168.56.101:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/192.168.56.101:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/192.168.56.101:30101/0.0.1"}

2018-03-30 00:56:25.641 +08:00 INFO go-chassis/chassis.go:215 got os signal interrupt
2018-03-30 00:56:25.641 +08:00 INFO go-chassis/chassis.go:220 stopping server http...
2018-03-30 00:56:25.641 +08:00 INFO go-chassis/chassis.go:225 http server stop success
2018-03-30 00:57:31.858 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-30 00:57:31.858 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 00:57:31.858 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 00:57:31.859 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-30 00:57:31.859 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-30 00:57:31.859 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-30 00:57:31.859 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-30 00:57:31.859 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-30 00:57:31.859 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-30 00:57:31.859 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 00:57:31.859 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-30 00:57:31.860 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 00:57:31.860 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 00:57:31.860 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:57:31.860 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 00:57:31.860 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 00:57:31.860 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = consumer-sb-demo. error: microservice consumer-sb-demo not found
2018-03-30 00:57:31.860 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 00:57:31.860 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 00:57:31.861 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
routeRule:
  provider-sb-demo: #这里就是请求里的host,也是sc里的service name
    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
      route: #路由规则列表
      - tags:
          version: 0.0.1 #对接service center的话，如果不填就自动为0.1
          app: provider-sb #对接service center的话，如果不填就自动为default
2018-03-30 00:57:32.173 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [consumer-sb-demo:0.0.1:provider-sb] exists in registry, no need register
2018-03-30 00:57:32.173 +08:00 WARN registry/bootstrap.go:54 Register microservice [consumer-sb-demo] success
2018-03-30 00:57:32.231 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 00:57:32.552 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 00:57:32.552 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 00:57:32.553 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 00:57:32.553 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 00:57:32.553 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 00:57:32.553 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:57:32.835 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 00:57:32.835 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 00:57:32.835 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 00:57:32.837 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:57:32.837 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:57:32.838 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:57:32.839 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:57:32.839 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:57:32.840 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:57:32.846 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:57:32.846 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 00:57:32.847 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
proxyedProtocol: rest
proxyProtocol:
    - serviceName: provider-sb-demo
      appid: provider-sb
      version: 0.0.1
      proto: rest
2018-03-30 00:57:32.848 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 00:57:32.848 +08:00 INFO adminapi/router.go:72 admin server listening on 127.0.0.1:40102
2018-03-30 00:57:32.848 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 00:57:33.849 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 00:57:33.849 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 00:57:33.849 +08:00 WARN dynamichttp/http_server.go:121 In sidecar mode, if set to listen on 127.0.0.1, mesher can only proxy for consumer
2018-03-30 00:57:33.849 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 00:57:33.849 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 00:57:33.850 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 00:57:33.994 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: e66bef75336d11e89c8f0255ac105519/47c46834337211e89c8f0255ac105519
2018-03-30 00:57:33.994 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: e66bef75336d11e89c8f0255ac105519/47c46834337211e89c8f0255ac105519
2018-03-30 00:57:33.994 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: e66bef75336d11e89c8f0255ac105519
2018-03-30 00:57:33.994 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:e66bef75336d11e89c8f0255ac105519/47c46834337211e89c8f0255ac105519
2018-03-30 00:57:33.994 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: e66bef75336d11e89c8f0255ac105519/47c46834337211e89c8f0255ac105519.
2018-03-30 00:57:33.994 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: e66bef75336d11e89c8f0255ac105519/47c46834337211e89c8f0255ac105519.
2018-03-30 00:57:34.785 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 00:57:48.118 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: 192.168.56.101:30101:0.0.1:default
2018-03-30 00:57:48.185 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 192.168.56.101:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/192.168.56.101:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/192.168.56.101:30101/0.0.1"}

2018-03-30 00:57:51.449 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-30 00:57:51.449 +08:00 INFO client/client_manager.go:97 Create client for provider-sb-demo
2018-03-30 00:58:35.272 +08:00 INFO go-chassis/chassis.go:215 got os signal interrupt
2018-03-30 00:58:35.272 +08:00 INFO go-chassis/chassis.go:220 stopping server http...
2018-03-30 00:58:35.272 +08:00 INFO go-chassis/chassis.go:225 http server stop success
2018-03-30 00:58:50.972 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-30 00:58:50.972 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 00:58:50.972 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 00:58:50.973 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-30 00:58:50.973 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-30 00:58:50.973 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-30 00:58:50.973 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-30 00:58:50.973 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-30 00:58:50.973 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-30 00:58:50.973 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 00:58:50.973 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-30 00:58:50.974 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 00:58:50.974 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 00:58:50.975 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:58:50.975 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 00:58:50.975 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 00:58:50.975 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = consumer-sb-demo. error: microservice consumer-sb-demo not found
2018-03-30 00:58:50.975 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 00:58:50.975 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 00:58:50.975 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
routeRule:
  provider-sb-demo: #这里就是请求里的host,也是sc里的service name
    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
      route: #路由规则列表
      - tags:
          version: 0.0.1 #对接service center的话，如果不填就自动为0.1
          app: provider-sb #对接service center的话，如果不填就自动为default
2018-03-30 00:58:51.645 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [consumer-sb-demo:0.0.1:provider-sb] exists in registry, no need register
2018-03-30 00:58:51.645 +08:00 WARN registry/bootstrap.go:54 Register microservice [consumer-sb-demo] success
2018-03-30 00:58:51.827 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 00:58:52.191 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 00:58:52.191 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 00:58:52.191 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 00:58:52.191 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 00:58:52.443 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 00:58:52.443 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 00:58:52.443 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 00:58:52.443 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 00:58:52.444 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 00:58:52.445 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:58:52.445 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:58:52.445 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:58:52.445 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:58:52.446 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:58:52.446 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:58:52.450 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:58:52.451 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 00:58:52.452 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 00:58:52.454 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 00:58:52.454 +08:00 INFO adminapi/router.go:72 admin server listening on 127.0.0.1:40102
2018-03-30 00:58:52.454 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 00:58:53.455 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 00:58:53.455 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 00:58:53.455 +08:00 WARN dynamichttp/http_server.go:121 In sidecar mode, if set to listen on 127.0.0.1, mesher can only proxy for consumer
2018-03-30 00:58:53.455 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 00:58:53.455 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 00:58:53.455 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 00:58:53.599 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: e66bef75336d11e89c8f0255ac105519/7731194f337211e89c8f0255ac105519
2018-03-30 00:58:53.600 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: e66bef75336d11e89c8f0255ac105519/7731194f337211e89c8f0255ac105519
2018-03-30 00:58:53.600 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: e66bef75336d11e89c8f0255ac105519
2018-03-30 00:58:53.600 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:e66bef75336d11e89c8f0255ac105519/7731194f337211e89c8f0255ac105519
2018-03-30 00:58:53.600 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: e66bef75336d11e89c8f0255ac105519/7731194f337211e89c8f0255ac105519.
2018-03-30 00:58:53.600 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: e66bef75336d11e89c8f0255ac105519/7731194f337211e89c8f0255ac105519.
2018-03-30 00:58:54.731 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 00:59:02.073 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-30 00:59:02.073 +08:00 INFO client/client_manager.go:97 Create client for provider-sb-demo
2018-03-30 01:00:52.252 +08:00 INFO go-chassis/chassis.go:215 got os signal interrupt
2018-03-30 01:00:52.252 +08:00 INFO go-chassis/chassis.go:220 stopping server http...
2018-03-30 01:00:52.252 +08:00 INFO go-chassis/chassis.go:225 http server stop success
2018-03-30 01:00:54.135 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-30 01:00:54.135 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 01:00:54.135 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 01:00:54.135 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-30 01:00:54.135 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-30 01:00:54.135 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-30 01:00:54.135 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-30 01:00:54.135 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-30 01:00:54.135 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-30 01:00:54.135 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 01:00:54.135 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-30 01:00:54.137 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 01:00:54.137 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 01:00:54.137 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 01:00:54.137 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 01:00:54.137 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 01:00:54.137 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = consumer-sb-demo. error: microservice consumer-sb-demo not found
2018-03-30 01:00:54.137 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 01:00:54.137 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 01:00:54.137 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
2018-03-30 01:00:54.431 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [consumer-sb-demo:0.0.1:provider-sb] exists in registry, no need register
2018-03-30 01:00:54.431 +08:00 WARN registry/bootstrap.go:54 Register microservice [consumer-sb-demo] success
2018-03-30 01:00:54.495 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 01:00:54.843 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 01:00:54.843 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 01:00:54.844 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 01:00:54.844 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 01:00:54.844 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 01:00:54.844 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 01:00:55.126 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 01:00:55.126 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 01:00:55.126 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 01:00:55.128 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:00:55.128 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:00:55.128 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:00:55.128 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:00:55.129 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:00:55.129 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:00:55.133 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:00:55.134 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:00:55.135 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 01:00:55.137 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 01:00:55.137 +08:00 INFO adminapi/router.go:72 admin server listening on 127.0.0.1:40102
2018-03-30 01:00:55.137 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 01:00:56.137 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 01:00:56.137 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 01:00:56.138 +08:00 WARN dynamichttp/http_server.go:121 In sidecar mode, if set to listen on 127.0.0.1, mesher can only proxy for consumer
2018-03-30 01:00:56.138 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 01:00:56.138 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 01:00:56.138 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 01:00:56.294 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: e66bef75336d11e89c8f0255ac105519/c0486459337211e891230255ac105117
2018-03-30 01:00:56.294 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: e66bef75336d11e89c8f0255ac105519/c0486459337211e891230255ac105117
2018-03-30 01:00:56.294 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: e66bef75336d11e89c8f0255ac105519
2018-03-30 01:00:56.294 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:e66bef75336d11e89c8f0255ac105519/c0486459337211e891230255ac105117
2018-03-30 01:00:56.294 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: e66bef75336d11e89c8f0255ac105519/c0486459337211e891230255ac105117.
2018-03-30 01:00:56.294 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: e66bef75336d11e89c8f0255ac105519/c0486459337211e891230255ac105117.
2018-03-30 01:00:57.109 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 01:01:24.718 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:default
2018-03-30 01:01:24.788 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: provider-sb-demo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/provider-sb-demo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/provider-sb-demo/0.0.1"}

2018-03-30 01:01:25.263 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:default
2018-03-30 01:01:25.339 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: provider-sb-demo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/provider-sb-demo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/provider-sb-demo/0.0.1"}

2018-03-30 01:01:25.883 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:default
2018-03-30 01:01:25.944 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: provider-sb-demo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/provider-sb-demo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/provider-sb-demo/0.0.1"}

2018-03-30 01:01:26.083 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:default
2018-03-30 01:01:26.165 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: provider-sb-demo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/provider-sb-demo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/provider-sb-demo/0.0.1"}

2018-03-30 01:01:26.268 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:default
2018-03-30 01:01:26.332 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: provider-sb-demo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/provider-sb-demo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/provider-sb-demo/0.0.1"}

2018-03-30 01:01:26.493 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:default
2018-03-30 01:01:26.559 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: provider-sb-demo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/provider-sb-demo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/provider-sb-demo/0.0.1"}

2018-03-30 01:01:26.716 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:default
2018-03-30 01:01:26.856 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: provider-sb-demo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/provider-sb-demo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/provider-sb-demo/0.0.1"}

2018-03-30 01:01:26.915 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:default
2018-03-30 01:01:26.995 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: provider-sb-demo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/provider-sb-demo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/provider-sb-demo/0.0.1"}

2018-03-30 01:01:27.115 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:default
2018-03-30 01:01:27.181 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: provider-sb-demo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/provider-sb-demo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/provider-sb-demo/0.0.1"}

2018-03-30 01:01:27.309 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: provider-sb-demo:0.0.1:default
2018-03-30 01:01:27.375 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: provider-sb-demo:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/provider-sb-demo/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/provider-sb-demo/0.0.1"}

2018-03-30 01:02:17.430 +08:00 INFO go-chassis/chassis.go:215 got os signal interrupt
2018-03-30 01:02:17.430 +08:00 INFO go-chassis/chassis.go:220 stopping server http...
2018-03-30 01:02:17.430 +08:00 INFO go-chassis/chassis.go:225 http server stop success
2018-03-30 01:02:18.783 +08:00 INFO archaius/archaius.go:96 Essential Configuration Path: [/root/tmp/mesher/conf/chassis.yaml /root/tmp/mesher/conf/microservice.yaml], Configuration Paths [/root/tmp/mesher/conf/circuit_breaker.yaml /root/tmp/mesher/conf/load_balancing.yaml /root/tmp/mesher/conf/rate_limiting.yaml /root/tmp/mesher/conf/tls.yaml /root/tmp/mesher/conf/monitoring.yaml /root/tmp/mesher/conf/auth.yaml /root/tmp/mesher/conf/tracing.yaml]
2018-03-30 01:02:18.783 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from CommandlineSource
2018-03-30 01:02:18.783 +08:00 WARN config-manager/configurationmanager.go:140 empty configurtion from ExternalSource
2018-03-30 01:02:18.784 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/circuit_breaker.yaml] file not exist
2018-03-30 01:02:18.784 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/load_balancing.yaml] file not exist
2018-03-30 01:02:18.784 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/rate_limiting.yaml] file not exist
2018-03-30 01:02:18.784 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tls.yaml] file not exist
2018-03-30 01:02:18.784 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/monitoring.yaml] file not exist
2018-03-30 01:02:18.784 +08:00 INFO archaius/archaius.go:44 [/root/tmp/mesher/conf/tracing.yaml] file not exist
2018-03-30 01:02:18.784 +08:00 INFO config/config.go:235 archaius init success
2018-03-30 01:02:18.784 +08:00 INFO config/router_config.go:71 Load route rules from file: /root/tmp/mesher/conf/router.yaml
2018-03-30 01:02:18.785 +08:00 WARN auth/auth.go:193 Huawei Cloud auth mode: ak/sk
2018-03-30 01:02:18.785 +08:00 INFO go-chassis/chassis.go:97 Chain init success
2018-03-30 01:02:18.785 +08:00 WARN registry/registry.go:141 registry.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 01:02:18.785 +08:00 INFO go-sc-client/client.go:133 Use Service center v4
2018-03-30 01:02:18.785 +08:00 WARN registry/registry.go:82 Enable servicecenter registry.
2018-03-30 01:02:18.785 +08:00 WARN registry/bootstrap.go:24 Get schemas failed, microservice = consumer-sb-demo. error: microservice consumer-sb-demo not found
2018-03-30 01:02:18.785 +08:00 INFO registry/bootstrap.go:45 Framework registered is [ Mesher:1.3.7 ]
2018-03-30 01:02:18.785 +08:00 INFO registry/bootstrap.go:46 Microservice registered by [ SIDECAR ]
2018-03-30 01:02:18.785 +08:00 INFO archaius/archaius.go:77 config value after change sourceTemplate | #routeRule:
#  ShoppingCart: #这里就是请求里的host,也是sc里的service name
#    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
#      route: #路由规则列表
#      - tags:
#          version: 0.2 #对接service center的话，如果不填就自动为0.1
#          app: HelloWorld #对接service center的话，如果不填就自动为default
#        weight: 80 #全重 80%到这里
#      - tags:
#          version: 1.2
#          app: HelloWorld
#        weight: 20 #全重 20%到这里
routeRule:
  provider-sb-demo: #这里就是请求里的host,也是sc里的service name
    - precedence: 2 #路由规则优先级 越大优先级越高，请求会先进入优先级最高的路由规则进行匹配
      route: #路由规则列表
      - tags:
          version: 0.0.1 #对接service center的话，如果不填就自动为0.1
          app: provider-sb #对接service center的话，如果不填就自动为default
2018-03-30 01:02:19.088 +08:00 WARN servicecenter/servicecenter.go:41 Microservice [consumer-sb-demo:0.0.1:provider-sb] exists in registry, no need register
2018-03-30 01:02:19.088 +08:00 WARN registry/bootstrap.go:54 Register microservice [consumer-sb-demo] success
2018-03-30 01:02:19.162 +08:00 INFO registry/bootstrap.go:83 Don't need add dependency
2018-03-30 01:02:19.506 +08:00 INFO registry/registry.go:160 Enabled Registry
2018-03-30 01:02:19.506 +08:00 INFO loadbalance/selector.go:26 Enable LoadBalancing
2018-03-30 01:02:19.506 +08:00 INFO bootstrap/bootstrap.go:32 Bootstrap Huawei Enterprise Edition.
2018-03-30 01:02:19.506 +08:00 WARN config-center/config_center.go:119 configcenter.Consumer TLS mode, verify peer: false, cipher plugin: default.
2018-03-30 01:02:19.793 +08:00 WARN config-center/config_center.go:78 config center init success
2018-03-30 01:02:19.793 +08:00 WARN metrics/cse_monitoring.go:63 monitor.Consumer TLS mode, verify peer: false, cipher plugin: default
2018-03-30 01:02:19.793 +08:00 INFO metrics/metric.go:92 Started sending metric Data to Monitor Server : https://cse.cn-north-1.myhwclouds.com:443
2018-03-30 01:02:19.793 +08:00 WARN tracing/tracer_manager.go:34 Tracing enabled. Start to init tracer map.
2018-03-30 01:02:19.794 +08:00 INFO go-chassis/chassis.go:261 Init chassis success
2018-03-30 01:02:19.795 +08:00 INFO archaius/archaius.go:77 config value after change policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:02:19.796 +08:00 INFO config-center/config_center.go:225 config value policy | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:02:19.796 +08:00 INFO archaius/archaius.go:77 config value after change plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:02:19.796 +08:00 INFO config-center/config_center.go:225 config value plugin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:02:19.797 +08:00 INFO archaius/archaius.go:77 config value after change admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:02:19.798 +08:00 INFO config-center/config_center.go:225 config value admin | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:02:19.803 +08:00 INFO config-center/config_center.go:225 config value proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:02:19.803 +08:00 INFO archaius/archaius.go:77 config value after change proxyedProtocol | # Router rules and fault injection rules are moved to router.yaml
#plugin:
#  destinationResolver: host #用户可自定义如何将host转为换destination name，默认为host直接就是service name，
admin: #admin API
  serverUri : 127.0.0.1:40102 # 在哪个地址监听
  goRuntimeMetrics : true # 是否开启go 运行时监控
2018-03-30 01:02:19.803 +08:00 INFO bootstrap/bootstrap.go:45 Running as sidecar
2018-03-30 01:02:19.806 +08:00 INFO adminapi/router.go:68 admin server is not using ssl
2018-03-30 01:02:19.806 +08:00 INFO adminapi/router.go:72 admin server listening on 127.0.0.1:40102
2018-03-30 01:02:19.806 +08:00 INFO adminapi/router.go:26 init router
2018-03-30 01:02:20.810 +08:00 INFO adminapi/router.go:82 admin server start success
2018-03-30 01:02:20.811 +08:00 INFO server/server_manager.go:62 starting server http...
2018-03-30 01:02:20.811 +08:00 WARN dynamichttp/http_server.go:121 In sidecar mode, if set to listen on 127.0.0.1, mesher can only proxy for consumer
2018-03-30 01:02:20.811 +08:00 INFO server/server_manager.go:68 http server start success
2018-03-30 01:02:20.811 +08:00 INFO server/server_manager.go:70 All server Start Completed
2018-03-30 01:02:20.811 +08:00 WARN registry/bootstrap.go:105 Start to register instances.
2018-03-30 01:02:20.948 +08:00 WARN servicecenter/servicecenter.go:58 RegisterMicroServiceInstance get SelfInstancesCache failed, Mid/Sid: e66bef75336d11e89c8f0255ac105519/f2b8bebb337211e89c8f0255ac105519
2018-03-30 01:02:20.948 +08:00 WARN servicecenter/servicecenter.go:62 RegisterMicroServiceInstance type asserts failed,  Mid/Sid: e66bef75336d11e89c8f0255ac105519/f2b8bebb337211e89c8f0255ac105519
2018-03-30 01:02:20.948 +08:00 INFO servicecenter/servicecenter.go:74 RegisterMicroServiceInstance success, MicroServiceID: e66bef75336d11e89c8f0255ac105519
2018-03-30 01:02:20.948 +08:00 INFO registry/heartbeat.go:50 Add HB task, task:e66bef75336d11e89c8f0255ac105519/f2b8bebb337211e89c8f0255ac105519
2018-03-30 01:02:20.948 +08:00 INFO servicecenter/servicecenter.go:80 RegisterMicroServiceInstance success, microServiceID/instanceID: e66bef75336d11e89c8f0255ac105519/f2b8bebb337211e89c8f0255ac105519.
2018-03-30 01:02:20.949 +08:00 WARN registry/bootstrap.go:167 Register instance success, serviceID/instanceID: e66bef75336d11e89c8f0255ac105519/f2b8bebb337211e89c8f0255ac105519.
2018-03-30 01:02:22.105 +08:00 INFO cse-collector/csemonitor.go:67 Connection to monitoring server established successfully
2018-03-30 01:02:46.419 +08:00 INFO client/client_manager.go:87 Create client map for rest
2018-03-30 01:02:46.419 +08:00 INFO client/client_manager.go:97 Create client for provider-sb-demo
2018-03-30 01:08:35.637 +08:00 WARN servicecenter/servicecenter.go:431 e66bef75336d11e89c8f0255ac105519 Get instances from remote, key: 192.168.56.101:30101:0.0.1:default
2018-03-30 01:08:35.716 +08:00 ERROR loadbalance/default.go:60 Lb err error: lb: FindMicroServiceInstances failed, ProviderID: 192.168.56.101:30101:0.0.1:default, err: FindMicroServiceInstances failed, appID/MicroServiceName/version/stage: default/192.168.56.101:30101/0.0.1/production, response StatusCode: 400, response body: {"errorCode":"400012","errorMessage":"Micro-service does not exist","detail":"provider not exist, consumer e66bef75336d11e89c8f0255ac105519 find provider default/192.168.56.101:30101/0.0.1"}

